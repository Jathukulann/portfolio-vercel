{"file_contents":{"design_guidelines.md":{"content":"# Design Guidelines for Jathukulan's Portfolio Website\n\n## Design Approach\n**Reference-Based Approach**: Drawing inspiration from modern developer portfolio leaders like Linear, Vercel, and premium design studios, focusing on sophisticated dark minimalism with strategic interactive elements.\n\n## Core Design Elements\n\n### Color Palette\n**Dark Mode Primary**:\n- Background: 12 8% 6% (Deep charcoal)\n- Surface: 15 6% 12% (Elevated surfaces)\n- Text Primary: 0 0% 98% (Near white)\n- Text Secondary: 0 0% 65% (Muted text)\n- Accent: 220 100% 60% (Professional blue)\n- Border: 240 4% 16% (Subtle borders)\n\n### Typography\n- **Primary**: Inter (Google Fonts) - Clean, professional readability\n- **Accent**: Poppins (Google Fonts) - Hero headings and emphasis\n- **Hierarchy**: text-5xl/4xl (hero), text-2xl/xl (sections), text-base (body)\n\n### Layout System\n**Tailwind Spacing**: Focus on units 4, 8, 16, 24 for consistent rhythm\n- Containers: max-w-6xl with px-8 for comfortable reading widths\n- Sections: py-24 for generous vertical breathing room\n- Components: p-8, gap-8 for internal spacing\n\n### Component Library\n\n**Navigation**: Fixed header with blur backdrop, minimal logo + hamburger menu\n**Hero Section**: Large typography with typing animation, minimal supporting text\n**Project Grid**: 2-column layout with hover-reveal overlays showing tech stack\n**Magnetic Buttons**: Elastic pull effect on hover, rounded-lg styling\n**Custom Cursor**: Subtle trail effect, scales on interactive elements\n**Case Study Layout**: Hero → Problem → Process → Solution → Impact structure\n\n### Interactive Elements\n- **Preloader**: Animated \"JK\" initials with smooth fade-out\n- **Scroll Animations**: Parallax hero elements, staggered card reveals\n- **Magnetic Effects**: Buttons and key CTAs with elastic attraction\n- **Hover States**: Subtle scale transforms, opacity shifts\n\n### Content Strategy\n**Sections** (5 maximum):\n1. Hero with animated introduction\n2. Featured projects grid (3-4 key projects)\n3. About/Skills overview\n4. Contact/CTA section\n5. Footer with social links\n\n**Projects Focus**: Quality over quantity - showcase 3-4 premium projects with detailed case studies rather than extensive galleries.\n\n### Images\n- **Hero**: No large hero image - focus on typography and animation\n- **Project Thumbnails**: High-quality mockups/screenshots in project grid\n- **Case Studies**: Process diagrams, before/after comparisons, user journey visuals\n- **About Section**: Professional headshot (optional)\n\n### Accessibility\n- Reduced motion preferences respected\n- High contrast ratios maintained\n- Keyboard navigation support\n- Screen reader optimization\n\n**Key Principle**: Sophisticated minimalism - every element serves a purpose, animations enhance rather than distract, and the dark aesthetic creates premium feel while maintaining excellent readability.","size_bytes":2856},"drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"replit.md":{"content":"# Jathukulan's Portfolio Website\n\n## Overview\n\nThis is a premium portfolio website for Jathukulan Sivanathan, a Full-Stack Developer. The project showcases a sophisticated dark minimalist design inspired by modern developer portfolios like Linear and Vercel. Built with React/TypeScript and featuring advanced animations, custom interactive components, and a comprehensive case study structure for project presentations.\n\n## User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n## System Architecture\n\n### Frontend Architecture\n**Technology Stack**: React with TypeScript, Vite for build tooling, and Tailwind CSS for styling with a custom design system. The application uses a component-based architecture with reusable UI components following shadcn/ui patterns.\n\n**Animation Strategy**: Hybrid approach combining GSAP for complex scroll animations and CSS animations for lightweight microinteractions. Includes accessibility considerations with `prefers-reduced-motion` support throughout.\n\n**Design System**: \n- Dark-first color palette with portfolio-specific colors (navy, slate, cyan accents)\n- Inter font for body text, Poppins for headings\n- Consistent 8px grid spacing system\n- Custom magnetic interaction effects and smooth cursor animations\n\n**Component Structure**:\n- Interactive components: Custom cursor, magnetic buttons, preloader with SVG animations\n- Page sections: Hero with typing animation, about, tech stack, project grid, experience, contact\n- Case study pages with detailed project breakdowns\n- Responsive navigation with scroll-triggered backdrop blur\n\n### Backend Architecture\n**Server Setup**: Express.js server with TypeScript, configured for both development and production environments. The server handles static file serving and API routes with structured error handling.\n\n**Session Management**: Uses connect-pg-simple for PostgreSQL-based session storage, indicating support for user authentication flows.\n\n**Development Workflow**: Hot reload in development with Vite integration, production builds with esbuild for server bundling.\n\n### Data Storage Solutions\n**Database**: PostgreSQL with Drizzle ORM for type-safe database operations. Current schema includes user management with unique usernames and password fields.\n\n**Database Configuration**: Uses Neon Database serverless PostgreSQL with connection pooling. Migration system in place with drizzle-kit for schema management.\n\n**Data Models**: Zod schemas for runtime validation integrated with Drizzle for full-stack type safety.\n\n### Authentication and Authorization\n**User System**: Basic user schema with username/password authentication setup. Password hashing and session management infrastructure in place but authentication routes not yet implemented.\n\n**Security**: Uses secure session cookies with PostgreSQL storage for session persistence.\n\n## External Dependencies\n\n### UI and Styling\n- **Radix UI**: Comprehensive headless component library for accessible UI primitives (dialogs, tooltips, forms, etc.)\n- **Tailwind CSS**: Utility-first CSS framework with custom configuration for portfolio color palette\n- **class-variance-authority**: Type-safe variant management for component styling\n- **Lucide React**: Icon library for consistent iconography\n\n### Animation and Interactions\n- **GSAP**: Professional animation library for complex scroll-triggered animations and magnetic effects\n- **Embla Carousel**: Lightweight carousel component for project showcases\n\n### Development and Build Tools\n- **Vite**: Fast development server and build tool with React plugin\n- **TypeScript**: Full-stack type safety with strict configuration\n- **ESBuild**: Fast JavaScript bundler for production server builds\n- **PostCSS**: CSS processing with Tailwind CSS integration\n\n### Database and Backend\n- **Neon Database**: Serverless PostgreSQL database service\n- **Drizzle ORM**: Type-safe database toolkit with Zod integration\n- **Express.js**: Web framework with JSON and URL-encoded body parsing\n\n### Forms and Validation\n- **React Hook Form**: Performant form library with minimal re-renders\n- **Hookform Resolvers**: Integration layer for external validation libraries\n- **Zod**: Runtime type validation for forms and API responses\n\n### State Management and Data Fetching\n- **TanStack React Query**: Server state management with caching and background updates\n- **React Router (Wouter)**: Lightweight client-side routing solution\n\n### Portfolio-Specific Features\n- **Google Fonts**: Inter and Poppins fonts loaded via CDN\n- **Custom Cursor**: Hardware-accelerated cursor tracking with interaction states\n- **Preloader**: SVG-based initial loading animation with \"JK\" branding\n- **Case Studies**: Detailed project showcase pages with metrics, process documentation, and impact analysis","size_bytes":4799},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \".5625rem\", /* 9px */\n        md: \".375rem\", /* 6px */\n        sm: \".1875rem\", /* 3px */\n      },\n      colors: {\n        // Portfolio-specific colors\n        portfolio: {\n          navy: \"#0a192f\",\n          lightSlate: \"#ccd6f6\", \n          slate: \"#8892b0\",\n          cyan: \"#64ffda\",\n        },\n        // Flat / base colors (regular buttons)\n        background: \"hsl(var(--background) / <alpha-value>)\",\n        foreground: \"hsl(var(--foreground) / <alpha-value>)\",\n        border: \"hsl(var(--border) / <alpha-value>)\",\n        input: \"hsl(var(--input) / <alpha-value>)\",\n        card: {\n          DEFAULT: \"hsl(var(--card) / <alpha-value>)\",\n          foreground: \"hsl(var(--card-foreground) / <alpha-value>)\",\n          border: \"hsl(var(--card-border) / <alpha-value>)\",\n        },\n        popover: {\n          DEFAULT: \"hsl(var(--popover) / <alpha-value>)\",\n          foreground: \"hsl(var(--popover-foreground) / <alpha-value>)\",\n          border: \"hsl(var(--popover-border) / <alpha-value>)\",\n        },\n        primary: {\n          DEFAULT: \"hsl(var(--primary) / <alpha-value>)\",\n          foreground: \"hsl(var(--primary-foreground) / <alpha-value>)\",\n          border: \"var(--primary-border)\",\n        },\n        secondary: {\n          DEFAULT: \"hsl(var(--secondary) / <alpha-value>)\",\n          foreground: \"hsl(var(--secondary-foreground) / <alpha-value>)\",\n          border: \"var(--secondary-border)\",\n        },\n        muted: {\n          DEFAULT: \"hsl(var(--muted) / <alpha-value>)\",\n          foreground: \"hsl(var(--muted-foreground) / <alpha-value>)\",\n          border: \"var(--muted-border)\",\n        },\n        accent: {\n          DEFAULT: \"hsl(var(--accent) / <alpha-value>)\",\n          foreground: \"hsl(var(--accent-foreground) / <alpha-value>)\",\n          border: \"var(--accent-border)\",\n        },\n        destructive: {\n          DEFAULT: \"hsl(var(--destructive) / <alpha-value>)\",\n          foreground: \"hsl(var(--destructive-foreground) / <alpha-value>)\",\n          border: \"var(--destructive-border)\",\n        },\n        ring: \"hsl(var(--ring) / <alpha-value>)\",\n        chart: {\n          \"1\": \"hsl(var(--chart-1) / <alpha-value>)\",\n          \"2\": \"hsl(var(--chart-2) / <alpha-value>)\",\n          \"3\": \"hsl(var(--chart-3) / <alpha-value>)\",\n          \"4\": \"hsl(var(--chart-4) / <alpha-value>)\",\n          \"5\": \"hsl(var(--chart-5) / <alpha-value>)\",\n        },\n        sidebar: {\n          ring: \"hsl(var(--sidebar-ring) / <alpha-value>)\",\n          DEFAULT: \"hsl(var(--sidebar) / <alpha-value>)\",\n          foreground: \"hsl(var(--sidebar-foreground) / <alpha-value>)\",\n          border: \"hsl(var(--sidebar-border) / <alpha-value>)\",\n        },\n        \"sidebar-primary\": {\n          DEFAULT: \"hsl(var(--sidebar-primary) / <alpha-value>)\",\n          foreground: \"hsl(var(--sidebar-primary-foreground) / <alpha-value>)\",\n          border: \"var(--sidebar-primary-border)\",\n        },\n        \"sidebar-accent\": {\n          DEFAULT: \"hsl(var(--sidebar-accent) / <alpha-value>)\",\n          foreground: \"hsl(var(--sidebar-accent-foreground) / <alpha-value>)\",\n          border: \"var(--sidebar-accent-border)\"\n        },\n        status: {\n          online: \"rgb(34 197 94)\",\n          away: \"rgb(245 158 11)\",\n          busy: \"rgb(239 68 68)\",\n          offline: \"rgb(156 163 175)\",\n        },\n      },\n      fontFamily: {\n        sans: [\"var(--font-sans)\"],\n        serif: [\"var(--font-serif)\"],\n        mono: [\"var(--font-mono)\"],\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: { height: \"0\" },\n          to: { height: \"var(--radix-accordion-content-height)\" },\n        },\n        \"accordion-up\": {\n          from: { height: \"var(--radix-accordion-content-height)\" },\n          to: { height: \"0\" },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":4235},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n  server: {\n    fs: {\n      strict: true,\n      deny: [\"**/.*\"],\n    },\n  },\n});\n","size_bytes":971},"server/index.ts":{"content":"import express, { type Request, Response, NextFunction } from \"express\";\nimport { registerRoutes } from \"./routes\";\nimport { setupVite, serveStatic, log } from \"./vite\";\n\nconst app = express();\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"…\";\n      }\n\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n(async () => {\n  const server = await registerRoutes(app);\n\n  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n    const status = err.status || err.statusCode || 500;\n    const message = err.message || \"Internal Server Error\";\n\n    res.status(status).json({ message });\n    throw err;\n  });\n\n  // importantly only setup vite in development and after\n  // setting up all the other routes so the catch-all route\n  // doesn't interfere with the other routes\n  if (app.get(\"env\") === \"development\") {\n    await setupVite(app, server);\n  } else {\n    serveStatic(app);\n  }\n\n  // ALWAYS serve the app on the port specified in the environment variable PORT\n  // Other ports are firewalled. Default to 5000 if not specified.\n  // this serves both the API and the client.\n  // It is the only port that is not firewalled.\n  const port = parseInt(process.env.PORT || '5000', 10);\n  server.listen({\n    port,\n    host: \"0.0.0.0\",\n    reusePort: true,\n  }, () => {\n    log(`serving on port ${port}`);\n  });\n})();\n","size_bytes":2066},"server/routes.ts":{"content":"import type { Express } from \"express\";\nimport { createServer, type Server } from \"http\";\nimport { storage } from \"./storage\";\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  // put application routes here\n  // prefix all routes with /api\n\n  // use storage to perform CRUD operations on the storage interface\n  // e.g. storage.insertUser(user) or storage.getUserByUsername(username)\n\n  const httpServer = createServer(app);\n\n  return httpServer;\n}\n","size_bytes":473},"server/storage.ts":{"content":"import { type User, type InsertUser } from \"@shared/schema\";\nimport { randomUUID } from \"crypto\";\n\n// modify the interface with any CRUD methods\n// you might need\n\nexport interface IStorage {\n  getUser(id: string): Promise<User | undefined>;\n  getUserByUsername(username: string): Promise<User | undefined>;\n  createUser(user: InsertUser): Promise<User>;\n}\n\nexport class MemStorage implements IStorage {\n  private users: Map<string, User>;\n\n  constructor() {\n    this.users = new Map();\n  }\n\n  async getUser(id: string): Promise<User | undefined> {\n    return this.users.get(id);\n  }\n\n  async getUserByUsername(username: string): Promise<User | undefined> {\n    return Array.from(this.users.values()).find(\n      (user) => user.username === username,\n    );\n  }\n\n  async createUser(insertUser: InsertUser): Promise<User> {\n    const id = randomUUID();\n    const user: User = { ...insertUser, id };\n    this.users.set(id, user);\n    return user;\n  }\n}\n\nexport const storage = new MemStorage();\n","size_bytes":993},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true as const,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2263},"shared/schema.ts":{"content":"import { sql } from \"drizzle-orm\";\nimport { pgTable, text, varchar } from \"drizzle-orm/pg-core\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\nexport const users = pgTable(\"users\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  username: text(\"username\").notNull().unique(),\n  password: text(\"password\").notNull(),\n});\n\nexport const insertUserSchema = createInsertSchema(users).pick({\n  username: true,\n  password: true,\n});\n\nexport type InsertUser = z.infer<typeof insertUserSchema>;\nexport type User = typeof users.$inferSelect;\n","size_bytes":584},"client/src/App.tsx":{"content":"import { Switch, Route } from \"wouter\";\nimport { queryClient } from \"./lib/queryClient\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport HomePage from \"@/pages/HomePage\";\nimport CaseStudyPage from \"@/pages/CaseStudyPage\";\nimport NotFound from \"@/pages/not-found\";\n\nfunction Router() {\n  return (\n    <Switch>\n      <Route path=\"/\" component={HomePage} />\n      <Route path=\"/projects/:slug\" component={CaseStudyPage} />\n      {/* Fallback to 404 */}\n      <Route component={NotFound} />\n    </Switch>\n  );\n}\n\nfunction App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <TooltipProvider>\n        <Toaster />\n        <Router />\n      </TooltipProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","size_bytes":857},"client/src/index.css":{"content":"@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n/* LIGHT MODE */\n:root {\n  --button-outline: rgba(0,0,0, .10);\n  --badge-outline: rgba(0,0,0, .05);\n\n  /* Automatic computation of border around primary / danger buttons */\n  --opaque-button-border-intensity: -8; /* In terms of percentages */\n\n  /* Backgrounds applied on top of other backgrounds when hovered/active */\n  --elevate-1: rgba(0,0,0, .03);\n  --elevate-2: rgba(0,0,0, .08);\n\n  --background: 0 0% 100%;\n  --foreground: 240 10% 3.9%;\n  --border: 240 5.9% 90%;\n  --card: 0 0% 98%;\n  --card-foreground: 240 10% 3.9%;\n  --card-border: 240 5.9% 88%;\n  --sidebar: 240 4.8% 95.9%;\n  --sidebar-foreground: 240 5.3% 26.1%;\n  --sidebar-border: 240 5.9% 93%;\n  --sidebar-primary: 220 100% 50%;\n  --sidebar-primary-foreground: 0 0% 98%;\n  --sidebar-accent: 240 4.8% 93%;\n  --sidebar-accent-foreground: 240 5.9% 10%;\n  --sidebar-ring: 220 100% 50%;\n  --popover: 0 0% 96%;\n  --popover-foreground: 240 10% 3.9%;\n  --popover-border: 240 5.9% 85%;\n  --primary: 220 100% 50%;\n  --primary-foreground: 0 0% 98%;\n  --secondary: 240 4.8% 93%;\n  --secondary-foreground: 240 5.9% 10%;\n  --muted: 240 4.8% 91%;\n  --muted-foreground: 240 3.8% 46.1%;\n  --accent: 240 4.8% 88%;\n  --accent-foreground: 240 5.9% 10%;\n  --destructive: 0 84.2% 60.2%;\n  --destructive-foreground: 0 0% 98%;\n  --input: 240 5.9% 78%;\n  --ring: 220 100% 50%;\n  --chart-1: 220 70% 50%;\n  --chart-2: 160 60% 45%;\n  --chart-3: 30 80% 55%;\n  --chart-4: 280 65% 60%;\n  --chart-5: 340 75% 55%;\n\n  --font-sans: Inter, -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif;\n  --font-serif: Poppins, Georgia, serif;\n  --font-mono: 'SF Mono', 'Monaco', 'Inconsolata', 'Roboto Mono', 'Source Code Pro', monospace;\n  --radius: .5rem;\n  --shadow-2xs: 0px 1px 2px 0px rgba(0, 0, 0, 0.05);\n  --shadow-xs: 0px 1px 3px 0px rgba(0, 0, 0, 0.1), 0px 1px 2px 0px rgba(0, 0, 0, 0.06);\n  --shadow-sm: 0px 1px 3px 0px rgba(0, 0, 0, 0.1), 0px 1px 2px -1px rgba(0, 0, 0, 0.1);\n  --shadow: 0px 4px 6px -1px rgba(0, 0, 0, 0.1), 0px 2px 4px -1px rgba(0, 0, 0, 0.06);\n  --shadow-md: 0px 10px 15px -3px rgba(0, 0, 0, 0.1), 0px 4px 6px -2px rgba(0, 0, 0, 0.05);\n  --shadow-lg: 0px 20px 25px -5px rgba(0, 0, 0, 0.1), 0px 10px 10px -5px rgba(0, 0, 0, 0.04);\n  --shadow-xl: 0px 25px 50px -12px rgba(0, 0, 0, 0.25);\n  --shadow-2xl: 0px 25px 50px -12px rgba(0, 0, 0, 0.25);\n  --tracking-normal: 0em;\n  --spacing: 0.25rem;\n\n  /* Automatically computed borders - intensity can be controlled by the user by the --opaque-button-border-intensity setting */\n\n  /* Fallback for older browsers */\n  --sidebar-primary-border: hsl(var(--sidebar-primary));\n  --sidebar-primary-border: hsl(from hsl(var(--sidebar-primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --sidebar-accent-border: hsl(var(--sidebar-accent));\n  --sidebar-accent-border: hsl(from hsl(var(--sidebar-accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --primary-border: hsl(var(--primary));\n  --primary-border: hsl(from hsl(var(--primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --secondary-border: hsl(var(--secondary));\n  --secondary-border: hsl(from hsl(var(--secondary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --muted-border: hsl(var(--muted));\n  --muted-border: hsl(from hsl(var(--muted)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --accent-border: hsl(var(--accent));\n  --accent-border: hsl(from hsl(var(--accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --destructive-border: hsl(var(--destructive));\n  --destructive-border: hsl(from hsl(var(--destructive)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n}\n\n.dark {\n  --button-outline: rgba(255,255,255, .10);\n  --badge-outline: rgba(255,255,255, .05);\n\n  --opaque-button-border-intensity: 9;  /* In terms of percentages */\n\n  /* Backgrounds applied on top of other backgrounds when hovered/active */\n  --elevate-1: rgba(255,255,255, .04);\n  --elevate-2: rgba(255,255,255, .09);\n\n  --background: 12 8% 6%;\n  --foreground: 0 0% 98%;\n  --border: 240 4% 16%;\n  --card: 15 6% 12%;\n  --card-foreground: 0 0% 95%;\n  --card-border: 240 4% 18%;\n  --sidebar: 18 5% 9%;\n  --sidebar-foreground: 0 0% 95%;\n  --sidebar-border: 240 4% 14%;\n  --sidebar-primary: 220 100% 60%;\n  --sidebar-primary-foreground: 0 0% 98%;\n  --sidebar-accent: 240 3% 15%;\n  --sidebar-accent-foreground: 0 0% 90%;\n  --sidebar-ring: 220 100% 60%;\n  --popover: 20 4% 14%;\n  --popover-foreground: 0 0% 95%;\n  --popover-border: 240 4% 20%;\n  --primary: 220 100% 60%;\n  --primary-foreground: 0 0% 98%;\n  --secondary: 240 3% 18%;\n  --secondary-foreground: 0 0% 90%;\n  --muted: 240 3% 16%;\n  --muted-foreground: 0 0% 65%;\n  --accent: 240 3% 20%;\n  --accent-foreground: 0 0% 90%;\n  --destructive: 0 84.2% 60.2%;\n  --destructive-foreground: 0 0% 98%;\n  --input: 240 4% 28%;\n  --ring: 220 100% 60%;\n  --chart-1: 220 70% 65%;\n  --chart-2: 160 60% 60%;\n  --chart-3: 30 80% 70%;\n  --chart-4: 280 65% 75%;\n  --chart-5: 340 75% 70%;\n\n  --shadow-2xs: 0px 1px 2px 0px rgba(0, 0, 0, 0.3);\n  --shadow-xs: 0px 1px 3px 0px rgba(0, 0, 0, 0.4), 0px 1px 2px 0px rgba(0, 0, 0, 0.2);\n  --shadow-sm: 0px 1px 3px 0px rgba(0, 0, 0, 0.4), 0px 1px 2px -1px rgba(0, 0, 0, 0.3);\n  --shadow: 0px 4px 6px -1px rgba(0, 0, 0, 0.5), 0px 2px 4px -1px rgba(0, 0, 0, 0.3);\n  --shadow-md: 0px 10px 15px -3px rgba(0, 0, 0, 0.6), 0px 4px 6px -2px rgba(0, 0, 0, 0.4);\n  --shadow-lg: 0px 20px 25px -5px rgba(0, 0, 0, 0.7), 0px 10px 10px -5px rgba(0, 0, 0, 0.5);\n  --shadow-xl: 0px 25px 50px -12px rgba(0, 0, 0, 0.8);\n  --shadow-2xl: 0px 25px 50px -12px rgba(0, 0, 0, 0.8);\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n\n  body {\n    @apply font-sans antialiased bg-background text-foreground;\n  }\n}\n\n/**\n * Using the elevate system.\n * Automatic contrast adjustment.\n *\n * <element className=\"hover-elevate\" />\n * <element className=\"active-elevate-2\" />\n *\n * // Using the tailwind utility when a data attribute is \"on\"\n * <element className=\"toggle-elevate data-[state=on]:toggle-elevated\" />\n * // Or manually controlling the toggle state\n * <element className=\"toggle-elevate toggle-elevated\" />\n *\n * Elevation systems have to handle many states.\n * - not-hovered, vs. hovered vs. active  (three mutually exclusive states)\n * - toggled or not\n * - focused or not (this is not handled with these utilities)\n *\n * Even without handling focused or not, this is six possible combinations that\n * need to be distinguished from eachother visually.\n */\n@layer utilities {\n\n  /* Hide ugly search cancel button in Chrome until we can style it properly */\n  input[type=\"search\"]::-webkit-search-cancel-button {\n    @apply hidden;\n  }\n\n  /* Placeholder styling for contentEditable div */\n  [contenteditable][data-placeholder]:empty::before {\n    content: attr(data-placeholder);\n    color: hsl(var(--muted-foreground));\n    pointer-events: none;\n  }\n\n  /* .no-default-hover-elevate/no-default-active-elevate is an escape hatch so consumers of\n   * buttons/badges can remove the automatic brightness adjustment on interactions\n   * and program their own. */\n  .no-default-hover-elevate {}\n\n  .no-default-active-elevate {}\n\n\n  /**\n   * Toggleable backgrounds go behind the content. Hoverable/active goes on top.\n   * This way they can stack/compound. Both will overlap the parent's borders!\n   * So borders will be automatically adjusted both on toggle, and hover/active,\n   * and they will be compounded.\n   */\n  .toggle-elevate::before,\n  .toggle-elevate-2::before {\n    content: \"\";\n    pointer-events: none;\n    position: absolute;\n    inset: 0px;\n    /*border-radius: inherit;   match rounded corners */\n    border-radius: inherit;\n    z-index: -1;\n    /* sits behind content but above backdrop */\n  }\n\n  .toggle-elevate.toggle-elevated::before {\n    background-color: var(--elevate-2);\n  }\n\n  /* If there's a 1px border, adjust the inset so that it covers that parent's border */\n  .border.toggle-elevate::before {\n    inset: -1px;\n  }\n\n  /* Does not work on elements with overflow:hidden! */\n  .hover-elevate:not(.no-default-hover-elevate),\n  .active-elevate:not(.no-default-active-elevate),\n  .hover-elevate-2:not(.no-default-hover-elevate),\n  .active-elevate-2:not(.no-default-active-elevate) {\n    position: relative;\n    z-index: 0;\n  }\n\n  .hover-elevate:not(.no-default-hover-elevate)::after,\n  .active-elevate:not(.no-default-active-elevate)::after,\n  .hover-elevate-2:not(.no-default-hover-elevate)::after,\n  .active-elevate-2:not(.no-default-active-elevate)::after {\n    content: \"\";\n    pointer-events: none;\n    position: absolute;\n    inset: 0px;\n    /*border-radius: inherit;   match rounded corners */\n    border-radius: inherit;\n    z-index: 999;\n    /* sits in front of content */\n  }\n\n  .hover-elevate:hover:not(.no-default-hover-elevate)::after,\n  .active-elevate:active:not(.no-default-active-elevate)::after {\n    background-color: var(--elevate-1);\n  }\n\n  .hover-elevate-2:hover:not(.no-default-hover-elevate)::after,\n  .active-elevate-2:active:not(.no-default-active-elevate)::after {\n    background-color: var(--elevate-2);\n  }\n\n  /* If there's a 1px border, adjust the inset so that it covers that parent's border */\n  .border.hover-elevate:not(.no-hover-interaction-elevate)::after,\n  .border.active-elevate:not(.no-active-interaction-elevate)::after,\n  .border.hover-elevate-2:not(.no-hover-interaction-elevate)::after,\n  .border.active-elevate-2:not(.no-active-interaction-elevate)::after,\n  .border.hover-elevate:not(.no-hover-interaction-elevate)::after {\n    inset: -1px;\n  }\n}","size_bytes":9893},"client/src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":157},"client/src/components/About.tsx":{"content":"import { useState, useEffect } from 'react';\n// Using updated profile image from public directory\nconst profileImage = '/profile.jpg';\n\nconst About = () => {\n  const [isVisible, setIsVisible] = useState(false);\n\n  useEffect(() => {\n    const prefersReducedMotion = window.matchMedia('(prefers-reduced-motion: reduce)').matches;\n    if (prefersReducedMotion) {\n      setIsVisible(true);\n      return;\n    }\n\n    const observer = new IntersectionObserver(\n      (entries) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting) {\n            setIsVisible(true);\n          }\n        });\n      },\n      {\n        threshold: 0.3,\n        rootMargin: '0px 0px -50px 0px'\n      }\n    );\n\n    const section = document.getElementById('about');\n    if (section) {\n      observer.observe(section);\n    }\n\n    return () => {\n      if (section) {\n        observer.unobserve(section);\n      }\n    };\n  }, []);\n\n  return (\n    <section id=\"about\" className=\"py-32 bg-card\">\n      <div className=\"max-w-6xl mx-auto px-8\">\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-20 items-center\">\n          {/* Professional Photo */}\n          <div className={`order-2 lg:order-1 transition-all duration-700 ${\n            isVisible ? 'opacity-100 translate-x-0' : 'opacity-0 -translate-x-8'\n          }`}>\n            <div className=\"relative max-w-lg mx-auto\">\n              <div className=\"relative overflow-hidden rounded-lg shadow-2xl\">\n                <img\n                  src={profileImage}\n                  alt=\"Jathukulan Sivanathan - Full-Stack Developer\"\n                  className=\"w-full h-auto object-cover transition-transform duration-500 hover:scale-105\"\n                  data-testid=\"profile-photo\"\n                />\n                <div className=\"absolute inset-0 bg-gradient-to-t from-portfolio-navy/30 to-transparent\"></div>\n              </div>\n              {/* Decorative elements */}\n              <div className=\"absolute -z-10 top-6 left-6 w-full h-full border-2 border-portfolio-cyan/30 rounded-lg\"></div>\n              <div className=\"absolute -z-20 top-12 left-12 w-full h-full bg-portfolio-cyan/5 rounded-lg\"></div>\n            </div>\n          </div>\n\n          {/* Enhanced About Text */}\n          <div className={`order-1 lg:order-2 transition-all duration-700 delay-300 ${\n            isVisible ? 'opacity-100 translate-x-0' : 'opacity-0 translate-x-8'\n          }`}>\n            <h2 \n              className=\"text-4xl md:text-6xl font-bold text-card-foreground mb-8\"\n              style={{ fontFamily: 'Poppins, sans-serif' }}\n              data-testid=\"about-title\"\n            >\n              About Me\n            </h2>\n            \n            <div className=\"space-y-6 text-lg text-muted-foreground leading-relaxed\">\n              <p>\n                I'm a <span className=\"text-portfolio-cyan font-semibold\">passionate full-stack developer</span> and Computer Science undergraduate with <span className=\"text-card-foreground font-medium\">2+ years of hands-on experience</span> building scalable web applications that solve real-world problems.\n              </p>\n              \n              <p>\n                My journey in software engineering has been driven by a love for creating innovative solutions using modern technologies. I specialize in <span className=\"text-portfolio-cyan\">React, Node.js, Java, and cloud platforms</span>, with a proven track record of delivering production-ready applications that users love.\n              </p>\n              \n              <p>\n                Beyond coding, I'm a <span className=\"text-card-foreground font-medium\">natural leader</span> who has managed teams, mentored junior developers, and led successful projects from conception to deployment. I thrive in collaborative environments and am always eager to learn emerging technologies and tackle complex challenges.\n              </p>\n              \n              <p>\n                Currently seeking opportunities to contribute to innovative projects where I can apply my technical expertise, leadership skills, and passion for creating exceptional user experiences.\n              </p>\n            </div>\n\n            <div className=\"mt-10 flex flex-wrap gap-6\">\n              <div className=\"flex items-center text-sm\">\n                <div className=\"w-3 h-3 bg-portfolio-cyan rounded-full mr-3\"></div>\n                <span className=\"text-muted-foreground\">Remote / Global</span>\n              </div>\n              <div className=\"flex items-center text-sm\">\n                <div className=\"w-3 h-3 bg-green-500 rounded-full mr-3\"></div>\n                <span className=\"text-muted-foreground\">Available for projects</span>\n              </div>\n              <div className=\"flex items-center text-sm\">\n                <div className=\"w-3 h-3 bg-yellow-500 rounded-full mr-3\"></div>\n                <span className=\"text-muted-foreground\">Open to mentoring</span>\n              </div>\n            </div>\n\n            {/* Call to action */}\n            <div className=\"mt-10\">\n              <button\n                onClick={() => {\n                  const element = document.getElementById('contact');\n                  if (element) {\n                    element.scrollIntoView({ behavior: 'smooth' });\n                  }\n                }}\n                className=\"bg-portfolio-cyan text-portfolio-navy px-8 py-3 rounded-lg font-semibold hover:bg-portfolio-lightSlate transition-all duration-300 hover:scale-105 shadow-lg\"\n                data-testid=\"contact-cta\"\n              >\n                Let's Work Together\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default About;","size_bytes":5720},"client/src/components/Contact.tsx":{"content":"import { useState, useEffect } from 'react';\nimport { Card } from '@/components/ui/card';\nimport MagneticButton from './MagneticButton';\nimport emailjs from '@emailjs/browser';\n\nconst Contact = () => {\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    message: ''\n  });\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [submitStatus, setSubmitStatus] = useState<'success' | 'error' | null>(null);\n\n  // Initialize EmailJS once on component mount\n  useEffect(() => {\n    const publicKey = import.meta.env.VITE_EMAILJS_PUBLIC_KEY;\n    if (publicKey && publicKey !== 'your_public_key') {\n      emailjs.init({\n        publicKey: publicKey,\n      });\n    }\n  }, []);\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({ ...prev, [name]: value }));\n    console.log(`Form updated: ${name} = ${value}`);\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    // Basic form validation\n    if (!formData.name.trim() || !formData.email.trim() || !formData.message.trim()) {\n      setSubmitStatus('error');\n      return;\n    }\n\n    setIsSubmitting(true);\n    setSubmitStatus(null);\n\n    try {\n      // EmailJS configuration - check for required environment variables\n      const serviceId = import.meta.env.VITE_EMAILJS_SERVICE_ID;\n      const templateId = import.meta.env.VITE_EMAILJS_TEMPLATE_ID;\n      const publicKey = import.meta.env.VITE_EMAILJS_PUBLIC_KEY;\n\n      if (!serviceId || !templateId || !publicKey || \n          serviceId === 'service_default' || templateId === 'template_default' || publicKey === 'your_public_key') {\n        console.warn('EmailJS not configured. Please set up VITE_EMAILJS_SERVICE_ID, VITE_EMAILJS_TEMPLATE_ID, and VITE_EMAILJS_PUBLIC_KEY environment variables.');\n        setSubmitStatus('error');\n        return;\n      }\n\n      // Prepare template parameters\n      const templateParams = {\n        from_name: formData.name,\n        from_email: formData.email,\n        message: formData.message,\n        to_email: 'jathukulan.sivanathan@gmail.com', // Your email\n      };\n\n      console.log('Sending email with EmailJS:', templateParams);\n\n      // Send email using EmailJS\n      const response = await emailjs.send(serviceId, templateId, templateParams);\n      \n      console.log('Email sent successfully:', response);\n      setSubmitStatus('success');\n      \n      // Reset form after successful submission\n      setFormData({\n        name: '',\n        email: '',\n        message: ''\n      });\n\n    } catch (error) {\n      console.error('Failed to send email:', error);\n      setSubmitStatus('error');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  return (\n    <section id=\"contact\" className=\"py-24 bg-background\">\n      <div className=\"max-w-4xl mx-auto px-8\">\n        <div className=\"text-center mb-16\">\n          <h2 \n            className=\"text-4xl md:text-5xl font-bold text-foreground mb-6\"\n            style={{ fontFamily: 'Poppins, sans-serif' }}\n            data-testid=\"contact-title\"\n          >\n            Let's Connect\n          </h2>\n          <p className=\"text-xl text-muted-foreground max-w-2xl mx-auto leading-relaxed\">\n            I'm always open to discussing new projects, creative ideas, or opportunities to be part of an ambitious team. Feel free to reach out for my full resume or to start a conversation.\n          </p>\n        </div>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12\">\n          {/* Contact Info */}\n          <div className=\"space-y-8\">\n            <div>\n              <h3 className=\"text-2xl font-bold text-foreground mb-6\">\n                Let's Connect\n              </h3>\n              <p className=\"text-muted-foreground leading-relaxed mb-8\">\n                Whether you have a project in mind, want to collaborate, or just want to say hello, \n                I'd love to hear from you. I typically respond within 24 hours.\n              </p>\n            </div>\n\n            {/* Contact Methods */}\n            <div className=\"space-y-4\">\n              <Card className=\"p-4 bg-card border-card-border hover-elevate transition-all duration-300\">\n                <div className=\"flex items-center space-x-4\">\n                  <div className=\"text-portfolio-cyan\">\n                    <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n                      <path d=\"M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z\"/>\n                      <polyline points=\"22,6 12,13 2,6\"/>\n                    </svg>\n                  </div>\n                  <div>\n                    <p className=\"text-sm text-muted-foreground\">Email</p>\n                    <a \n                      href=\"mailto:jathukulan.sivanathan@gmail.com\"\n                      className=\"text-card-foreground hover:text-portfolio-cyan transition-colors\"\n                      data-interactive\n                      data-testid=\"contact-email\"\n                    >\n                      jathukulan.sivanathan@gmail.com\n                    </a>\n                  </div>\n                </div>\n              </Card>\n\n              <Card className=\"p-4 bg-card border-card-border hover-elevate transition-all duration-300\">\n                <div className=\"flex items-center space-x-4\">\n                  <div className=\"text-portfolio-cyan\">\n                    <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n                      <path d=\"M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z\"/>\n                    </svg>\n                  </div>\n                  <div>\n                    <p className=\"text-sm text-muted-foreground\">Phone</p>\n                    <a \n                      href=\"tel:+94778781792\"\n                      className=\"text-card-foreground hover:text-portfolio-cyan transition-colors\"\n                      data-interactive\n                      data-testid=\"contact-phone\"\n                    >\n                      +94 778 781 792\n                    </a>\n                  </div>\n                </div>\n              </Card>\n\n              <Card className=\"p-4 bg-card border-card-border hover-elevate transition-all duration-300\">\n                <div className=\"flex items-center space-x-4\">\n                  <div className=\"text-portfolio-cyan\">\n                    <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n                      <path d=\"M16 8a6 6 0 0 1 6 6v7h-4v-7a2 2 0 0 0-2-2 2 2 0 0 0-2 2v7h-4v-7a6 6 0 0 1 6-6z\"/>\n                      <rect x=\"2\" y=\"9\" width=\"4\" height=\"12\"/>\n                      <circle cx=\"4\" cy=\"4\" r=\"2\"/>\n                    </svg>\n                  </div>\n                  <div>\n                    <p className=\"text-sm text-muted-foreground\">LinkedIn</p>\n                    <a \n                      href=\"https://www.linkedin.com/in/jathukulan-a58323312\"\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      className=\"text-card-foreground hover:text-portfolio-cyan transition-colors\"\n                      data-interactive\n                      data-testid=\"contact-linkedin\"\n                    >\n                      linkedin.com/in/jathukulan-a58323312\n                    </a>\n                  </div>\n                </div>\n              </Card>\n\n              <Card className=\"p-4 bg-card border-card-border hover-elevate transition-all duration-300\">\n                <div className=\"flex items-center space-x-4\">\n                  <div className=\"text-portfolio-cyan\">\n                    <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n                      <path d=\"M9 19c-5 0-8-3-8-8s4-8 9-8 8 3 8 8-4 8-8 8z\"/>\n                      <path d=\"M8 14s1.5 2 4 2 4-2 4-2\"/>\n                      <line x1=\"9\" y1=\"9\" x2=\"9.01\" y2=\"9\"/>\n                      <line x1=\"15\" y1=\"9\" x2=\"15.01\" y2=\"9\"/>\n                    </svg>\n                  </div>\n                  <div>\n                    <p className=\"text-sm text-muted-foreground\">GitHub</p>\n                    <a \n                      href=\"https://github.com/Jathukulann\"\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      className=\"text-card-foreground hover:text-portfolio-cyan transition-colors\"\n                      data-interactive\n                      data-testid=\"contact-github\"\n                    >\n                      github.com/Jathukulann\n                    </a>\n                  </div>\n                </div>\n              </Card>\n            </div>\n          </div>\n\n          {/* Contact Form */}\n          <Card className=\"p-8 bg-card border-card-border\">\n            <form onSubmit={handleSubmit} className=\"space-y-6\" data-testid=\"contact-form\">\n              <div>\n                <label htmlFor=\"name\" className=\"block text-sm font-medium text-card-foreground mb-2\">\n                  Name\n                </label>\n                <input\n                  type=\"text\"\n                  id=\"name\"\n                  name=\"name\"\n                  value={formData.name}\n                  onChange={handleInputChange}\n                  className=\"w-full px-4 py-3 bg-background border border-border rounded-md focus:ring-2 focus:ring-portfolio-cyan focus:border-transparent text-foreground placeholder-muted-foreground transition-colors\"\n                  placeholder=\"Your full name\"\n                  required\n                  data-testid=\"input-name\"\n                />\n              </div>\n\n              <div>\n                <label htmlFor=\"email\" className=\"block text-sm font-medium text-card-foreground mb-2\">\n                  Email\n                </label>\n                <input\n                  type=\"email\"\n                  id=\"email\"\n                  name=\"email\"\n                  value={formData.email}\n                  onChange={handleInputChange}\n                  className=\"w-full px-4 py-3 bg-background border border-border rounded-md focus:ring-2 focus:ring-portfolio-cyan focus:border-transparent text-foreground placeholder-muted-foreground transition-colors\"\n                  placeholder=\"your.email@example.com\"\n                  required\n                  data-testid=\"input-email\"\n                />\n              </div>\n\n              <div>\n                <label htmlFor=\"message\" className=\"block text-sm font-medium text-card-foreground mb-2\">\n                  Message\n                </label>\n                <textarea\n                  id=\"message\"\n                  name=\"message\"\n                  value={formData.message}\n                  onChange={handleInputChange}\n                  rows={5}\n                  className=\"w-full px-4 py-3 bg-background border border-border rounded-md focus:ring-2 focus:ring-portfolio-cyan focus:border-transparent text-foreground placeholder-muted-foreground transition-colors resize-none\"\n                  placeholder=\"Tell me about your project or just say hello...\"\n                  required\n                  data-testid=\"input-message\"\n                />\n              </div>\n\n              {/* Success/Error Messages */}\n              {submitStatus === 'success' && (\n                <div className=\"p-4 bg-green-500/20 border border-green-500/30 rounded-md text-green-400 text-center\" data-testid=\"success-message\">\n                  <p>✅ Thanks for reaching out! I'll get back to you within 24 hours.</p>\n                </div>\n              )}\n              \n              {submitStatus === 'error' && (\n                <div className=\"p-4 bg-red-500/20 border border-red-500/30 rounded-md text-red-400 text-center\" data-testid=\"error-message\">\n                  <p>❌ Something went wrong. Please try again or reach out via email directly.</p>\n                </div>\n              )}\n\n              <MagneticButton \n                type=\"submit\"\n                variant=\"primary\"\n                className=\"w-full py-4 text-lg\"\n                disabled={isSubmitting}\n                data-testid=\"submit-button\"\n              >\n                {isSubmitting ? 'Sending...' : 'Send Message'}\n              </MagneticButton>\n            </form>\n          </Card>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Contact;","size_bytes":12746},"client/src/components/CustomCursor.tsx":{"content":"import { useEffect, useRef } from 'react';\n\nconst CustomCursor = () => {\n  const mainCursorRef = useRef<HTMLDivElement>(null);\n  const followerCursorRef = useRef<HTMLDivElement>(null);\n  const mousePos = useRef({ x: 0, y: 0 });\n\n  useEffect(() => {\n    const prefersReducedMotion = window.matchMedia('(prefers-reduced-motion: reduce)').matches;\n    if (prefersReducedMotion) return;\n\n    const handleMouseMove = (e: MouseEvent) => {\n      mousePos.current = { x: e.clientX, y: e.clientY };\n      \n      // Update main cursor immediately\n      if (mainCursorRef.current) {\n        mainCursorRef.current.style.transform = `translate(${e.clientX}px, ${e.clientY}px)`;\n      }\n    };\n\n    // Smooth follower animation\n    const animateFollower = () => {\n      if (followerCursorRef.current) {\n        const follower = followerCursorRef.current;\n        const currentX = parseFloat(follower.style.left || '0');\n        const currentY = parseFloat(follower.style.top || '0');\n        \n        const targetX = mousePos.current.x;\n        const targetY = mousePos.current.y;\n        \n        const newX = currentX + (targetX - currentX) * 0.1;\n        const newY = currentY + (targetY - currentY) * 0.1;\n        \n        follower.style.left = `${newX}px`;\n        follower.style.top = `${newY}px`;\n      }\n      requestAnimationFrame(animateFollower);\n    };\n\n    const handleMouseEnter = () => {\n      if (followerCursorRef.current) {\n        followerCursorRef.current.style.transform = 'scale(1.5)';\n        followerCursorRef.current.style.backgroundColor = '#64ffda';\n        followerCursorRef.current.style.borderColor = '#64ffda';\n      }\n    };\n\n    const handleMouseLeave = () => {\n      if (followerCursorRef.current) {\n        followerCursorRef.current.style.transform = 'scale(1)';\n        followerCursorRef.current.style.backgroundColor = 'transparent';\n        followerCursorRef.current.style.borderColor = '#ccd6f6';\n      }\n    };\n\n    // Add event listeners\n    document.addEventListener('mousemove', handleMouseMove);\n    \n    // Add hover effects to interactive elements\n    const interactiveElements = document.querySelectorAll('a, button, [data-interactive]');\n    interactiveElements.forEach(el => {\n      el.addEventListener('mouseenter', handleMouseEnter);\n      el.addEventListener('mouseleave', handleMouseLeave);\n    });\n\n    // Start follower animation\n    requestAnimationFrame(animateFollower);\n\n    return () => {\n      document.removeEventListener('mousemove', handleMouseMove);\n      interactiveElements.forEach(el => {\n        el.removeEventListener('mouseenter', handleMouseEnter);\n        el.removeEventListener('mouseleave', handleMouseLeave);\n      });\n    };\n  }, []);\n\n  return (\n    <>\n      {/* Main cursor - small solid dot */}\n      <div\n        ref={mainCursorRef}\n        className=\"fixed w-2 h-2 bg-portfolio-cyan rounded-full pointer-events-none z-50 -translate-x-1 -translate-y-1\"\n        style={{ willChange: 'transform' }}\n        data-testid=\"main-cursor\"\n      />\n      \n      {/* Follower cursor - larger outlined circle */}\n      <div\n        ref={followerCursorRef}\n        className=\"fixed w-8 h-8 border border-portfolio-lightSlate rounded-full pointer-events-none z-40 -translate-x-4 -translate-y-4 transition-all duration-300\"\n        style={{ \n          willChange: 'transform, background-color',\n          left: '0px',\n          top: '0px'\n        }}\n        data-testid=\"follower-cursor\"\n      />\n    </>\n  );\n};\n\nexport default CustomCursor;","size_bytes":3495},"client/src/components/Experience.tsx":{"content":"import { Card } from '@/components/ui/card';\nimport { useEffect, useRef, useState } from 'react';\n\nconst experiences = [\n  {\n    title: 'Vice President',\n    organization: 'Hindu Society, University of Colombo',\n    period: 'Feb 2025 - Present',\n    current: true\n  },\n  {\n    title: 'IGV-CXP Team Member',\n    organization: 'AIESEC',\n    period: 'Jan 2024 - Jul 2024',\n    current: false\n  },\n  {\n    title: 'Faculty Representative',\n    organization: 'Tamil Literary Association',\n    period: '2024 - 2025',\n    current: false\n  },\n  {\n    title: 'Kabaddi Team Member',\n    organization: 'University of Colombo',\n    period: '2023 - 2024',\n    current: false,\n    description: 'Contributed to team\\'s 1st Runner-up position in Inter-faculty Competition (2024 & 2023), demonstrating consistent performance and teamwork.'\n  },\n  {\n    title: 'Cricket U17 Team Member',\n    organization: 'Jaffna Hindu College',\n    period: '2019 - 2020',\n    current: false,\n    description: 'Represented the college in U17 cricket competitions, developing teamwork and strategic thinking skills.'\n  }\n];\n\nconst Experience = () => {\n  const [visibleItems, setVisibleItems] = useState<Set<number>>(new Set());\n  const itemRefs = useRef<(HTMLDivElement | null)[]>([]);\n\n  useEffect(() => {\n    const prefersReducedMotion = window.matchMedia('(prefers-reduced-motion: reduce)').matches;\n    if (prefersReducedMotion) {\n      setVisibleItems(new Set(experiences.map((_, index) => index)));\n      return;\n    }\n\n    const observer = new IntersectionObserver(\n      (entries) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting) {\n            const itemIndex = itemRefs.current.indexOf(entry.target as HTMLDivElement);\n            if (itemIndex !== -1) {\n              setTimeout(() => {\n                setVisibleItems(prev => new Set(prev).add(itemIndex));\n              }, itemIndex * 200);\n            }\n          }\n        });\n      },\n      {\n        threshold: 0.3,\n        rootMargin: '0px 0px -50px 0px'\n      }\n    );\n\n    itemRefs.current.forEach(ref => {\n      if (ref) observer.observe(ref);\n    });\n\n    return () => {\n      itemRefs.current.forEach(ref => {\n        if (ref) observer.unobserve(ref);\n      });\n    };\n  }, []);\n\n  return (\n    <section className=\"py-24 bg-card\">\n      <div className=\"max-w-4xl mx-auto px-8\">\n        <div className=\"text-center mb-16\">\n          <h2 \n            className=\"text-4xl md:text-5xl font-bold text-card-foreground mb-6\"\n            style={{ fontFamily: 'Poppins, sans-serif' }}\n            data-testid=\"experience-title\"\n          >\n            Experience & Leadership\n          </h2>\n          <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto leading-relaxed\">\n            A journey of leadership roles and organizational involvement that have shaped my character and collaborative skills.\n          </p>\n        </div>\n\n        <div className=\"relative\">\n          {/* Timeline line */}\n          <div className=\"absolute left-4 md:left-1/2 md:-translate-x-px top-0 bottom-0 w-0.5 bg-border\"></div>\n\n          <div className=\"space-y-12\">\n            {experiences.map((experience, index) => (\n              <div\n                key={index}\n                ref={el => itemRefs.current[index] = el}\n                className={`relative flex items-center transition-all duration-700 ${\n                  visibleItems.has(index)\n                    ? 'opacity-100 translate-x-0'\n                    : 'opacity-0 translate-x-8'\n                }`}\n                style={{ transitionDelay: `${index * 150}ms` }}\n              >\n                {/* Timeline dot */}\n                <div className={`absolute left-4 md:left-1/2 md:-translate-x-1/2 w-4 h-4 rounded-full border-2 ${\n                  experience.current \n                    ? 'bg-portfolio-cyan border-portfolio-cyan' \n                    : 'bg-background border-border'\n                } z-10`}></div>\n\n                {/* Content card */}\n                <div className={`ml-12 md:ml-0 w-full ${index % 2 === 0 ? 'md:pr-8 md:mr-8' : 'md:pl-8 md:ml-8'}`}>\n                  <Card \n                    className={`p-6 bg-background border-border hover-elevate transition-all duration-300 ${\n                      index % 2 === 1 ? 'md:text-right' : ''\n                    }`}\n                    data-testid={`experience-${index}`}\n                  >\n                    <div className=\"flex items-start justify-between mb-2\">\n                      <div className={index % 2 === 1 ? 'md:order-2' : ''}>\n                        <h3 \n                          className=\"text-xl font-bold text-foreground mb-1\"\n                          data-testid={`experience-title-${index}`}\n                        >\n                          {experience.title}\n                        </h3>\n                        <h4 \n                          className=\"text-lg text-portfolio-cyan font-medium mb-2\"\n                          data-testid={`experience-org-${index}`}\n                        >\n                          {experience.organization}\n                        </h4>\n                      </div>\n                      {experience.current && (\n                        <span className=\"px-2 py-1 text-xs bg-portfolio-cyan text-portfolio-navy rounded-full font-medium\">\n                          Current\n                        </span>\n                      )}\n                    </div>\n                    <p \n                      className=\"text-muted-foreground text-sm mb-3\"\n                      data-testid={`experience-period-${index}`}\n                    >\n                      {experience.period}\n                    </p>\n                    {experience.description && (\n                      <p \n                        className=\"text-muted-foreground text-sm leading-relaxed\"\n                        data-testid={`experience-description-${index}`}\n                      >\n                        {experience.description}\n                      </p>\n                    )}\n                  </Card>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Experience;","size_bytes":6199},"client/src/components/Footer.tsx":{"content":"const Footer = () => {\n  const currentYear = new Date().getFullYear();\n\n  const socialLinks = [\n    {\n      name: 'GitHub',\n      url: 'https://github.com/Jathukulann',\n      icon: (\n        <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n          <path d=\"M12 0C5.374 0 0 5.373 0 12c0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23A11.509 11.509 0 0112 5.803c1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576C20.566 21.797 24 17.3 24 12c0-6.627-5.373-12-12-12z\"/>\n        </svg>\n      )\n    },\n    {\n      name: 'LinkedIn',\n      url: 'https://www.linkedin.com/in/jathukulan-a58323312',\n      icon: (\n        <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n          <path d=\"M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z\"/>\n        </svg>\n      )\n    }\n  ];\n\n  return (\n    <footer className=\"bg-portfolio-navy border-t border-portfolio-slate border-opacity-20 py-12\">\n      <div className=\"max-w-6xl mx-auto px-8\">\n        <div className=\"flex flex-col md:flex-row justify-between items-center\">\n          {/* Logo and Description */}\n          <div className=\"mb-8 md:mb-0\">\n            <h3 \n              className=\"text-2xl font-bold text-portfolio-cyan mb-2\"\n              style={{ fontFamily: 'Poppins, sans-serif' }}\n              data-testid=\"footer-logo\"\n            >\n              JS\n            </h3>\n            <p className=\"text-portfolio-slate max-w-md\">\n              Building tomorrow's web, one line of code at a time.\n            </p>\n          </div>\n\n          {/* Social Links */}\n          <div className=\"flex items-center space-x-6\">\n            {socialLinks.map((link) => (\n              <a\n                key={link.name}\n                href={link.url}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"text-portfolio-slate hover:text-portfolio-cyan transition-colors duration-300\"\n                data-testid={`social-${link.name.toLowerCase()}`}\n                data-interactive\n              >\n                <span className=\"sr-only\">{link.name}</span>\n                {link.icon}\n              </a>\n            ))}\n          </div>\n        </div>\n\n        {/* Copyright */}\n        <div className=\"mt-8 pt-8 border-t border-portfolio-slate border-opacity-20 text-center\">\n          <p className=\"text-portfolio-slate text-sm\">\n            © {currentYear} Jathukulan Sivanathan. All rights reserved.\n          </p>\n        </div>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;","size_bytes":3465},"client/src/components/Hero.tsx":{"content":"import { useEffect, useState } from 'react';\nimport MagneticButton from './MagneticButton';\n\nconst Hero = () => {\n  const [displayText, setDisplayText] = useState('');\n  const [showSecondLine, setShowSecondLine] = useState(false);\n  const [showButtons, setShowButtons] = useState(false);\n  \n  const firstLine = \"Hi, I'm Jathukulan Sivanathan.\";\n  const secondLine = \"A Full-Stack Developer Building Tomorrow's Web.\";\n\n  useEffect(() => {\n    const prefersReducedMotion = window.matchMedia('(prefers-reduced-motion: reduce)').matches;\n    \n    if (prefersReducedMotion) {\n      setDisplayText(firstLine);\n      setShowSecondLine(true);\n      setShowButtons(true);\n      return;\n    }\n\n    let index = 0;\n    const typeWriter = () => {\n      if (index < firstLine.length) {\n        setDisplayText(firstLine.slice(0, index + 1));\n        index++;\n        setTimeout(typeWriter, 100);\n      } else {\n        setTimeout(() => setShowSecondLine(true), 500);\n      }\n    };\n\n    const timer = setTimeout(typeWriter, 1000);\n    \n    // Show buttons after both lines are complete\n    setTimeout(() => setShowButtons(true), 4000);\n\n    return () => clearTimeout(timer);\n  }, []);\n\n  return (\n    <section className=\"min-h-screen flex items-center justify-center bg-portfolio-navy px-8\">\n      <div className=\"max-w-4xl mx-auto text-center\">\n        <div className=\"mb-8\">\n          <h1 \n            className=\"text-5xl md:text-7xl font-bold text-portfolio-lightSlate mb-6\"\n            style={{ fontFamily: 'Poppins, sans-serif' }}\n            data-testid=\"hero-title\"\n          >\n            {displayText}\n            <span className=\"animate-pulse\">|</span>\n          </h1>\n          \n          <div \n            className={`transition-all duration-1000 ${\n              showSecondLine ? 'opacity-100 translate-y-0' : 'opacity-0 translate-y-4'\n            }`}\n          >\n            <h2 \n              className=\"text-2xl md:text-3xl text-portfolio-slate mb-8 leading-relaxed\"\n              style={{ fontFamily: 'Inter, sans-serif' }}\n              data-testid=\"hero-subtitle\"\n            >\n              {secondLine}\n            </h2>\n          </div>\n        </div>\n\n        <div \n          className={`flex flex-col sm:flex-row gap-4 justify-center items-center transition-all duration-1000 ${\n            showButtons ? 'opacity-100 translate-y-0' : 'opacity-0 translate-y-8'\n          }`}\n        >\n          <MagneticButton \n            variant=\"primary\"\n            className=\"text-lg px-8 py-4\"\n            onClick={() => {\n              console.log('Scrolling to projects');\n              document.getElementById('projects')?.scrollIntoView({ behavior: 'smooth' });\n            }}\n          >\n            View My Work\n          </MagneticButton>\n          \n          <MagneticButton \n            variant=\"secondary\"\n            className=\"text-lg px-8 py-4\"\n            onClick={() => {\n              console.log('Opening contact');\n              document.getElementById('contact')?.scrollIntoView({ behavior: 'smooth' });\n            }}\n          >\n            Get In Touch\n          </MagneticButton>\n        </div>\n\n        {/* Scroll indicator */}\n        <div \n          className={`absolute bottom-8 left-1/2 transform -translate-x-1/2 transition-all duration-1000 delay-1000 ${\n            showButtons ? 'opacity-100' : 'opacity-0'\n          }`}\n        >\n          <div className=\"w-px h-16 bg-portfolio-slate mx-auto mb-2\"></div>\n          <div className=\"animate-bounce\">\n            <svg \n              width=\"20\" \n              height=\"12\" \n              viewBox=\"0 0 20 12\" \n              className=\"text-portfolio-slate\"\n            >\n              <path \n                d=\"M2 2L10 10L18 2\" \n                stroke=\"currentColor\" \n                strokeWidth=\"2\" \n                fill=\"none\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n              />\n            </svg>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Hero;","size_bytes":4009},"client/src/components/MagneticButton.tsx":{"content":"import { forwardRef } from 'react';\nimport { useMagneticEffect } from '@/hooks/useMagneticEffect';\nimport { cn } from '@/lib/utils';\n\ninterface MagneticButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  variant?: 'primary' | 'secondary' | 'outline';\n  strength?: number;\n  scale?: number;\n  children: React.ReactNode;\n}\n\nconst MagneticButton = forwardRef<HTMLButtonElement, MagneticButtonProps>(\n  ({ className, variant = 'primary', strength = 0.3, scale = 1.05, children, ...props }, ref) => {\n    const magneticRef = useMagneticEffect<HTMLButtonElement>({ strength, scale });\n\n    const variants = {\n      primary: 'bg-portfolio-cyan text-portfolio-navy hover:bg-opacity-90',\n      secondary: 'bg-transparent border border-portfolio-cyan text-portfolio-cyan hover:bg-portfolio-cyan hover:text-portfolio-navy',\n      outline: 'bg-transparent border border-portfolio-lightSlate text-portfolio-lightSlate hover:border-portfolio-cyan hover:text-portfolio-cyan'\n    };\n\n    return (\n      <button\n        ref={magneticRef}\n        className={cn(\n          'px-6 py-3 font-medium transition-all duration-300 relative overflow-hidden group',\n          'focus:outline-none focus:ring-2 focus:ring-portfolio-cyan focus:ring-offset-2 focus:ring-offset-portfolio-navy',\n          variants[variant],\n          className\n        )}\n        style={{ willChange: 'transform' }}\n        data-interactive\n        data-testid={`magnetic-button-${variant}`}\n        {...props}\n      >\n        <span className=\"relative z-10\">\n          {children}\n        </span>\n      </button>\n    );\n  }\n);\n\nMagneticButton.displayName = 'MagneticButton';\n\nexport default MagneticButton;","size_bytes":1674},"client/src/components/Navigation.tsx":{"content":"import { useState, useEffect } from 'react';\n\nconst Navigation = () => {\n  const [isScrolled, setIsScrolled] = useState(false);\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n\n  useEffect(() => {\n    const handleScroll = () => {\n      setIsScrolled(window.scrollY > 50);\n    };\n\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n\n  const scrollToSection = (sectionId: string) => {\n    const element = document.getElementById(sectionId);\n    if (element) {\n      element.scrollIntoView({ behavior: 'smooth' });\n      setIsMobileMenuOpen(false);\n    }\n  };\n\n  return (\n    <nav \n      className={`fixed top-0 left-0 right-0 z-40 transition-all duration-300 ${\n        isScrolled ? 'bg-portfolio-navy bg-opacity-95 backdrop-blur-sm border-b border-portfolio-slate border-opacity-20' : 'bg-transparent'\n      }`}\n      data-testid=\"navigation\"\n    >\n      <div className=\"max-w-6xl mx-auto px-8 py-4\">\n        <div className=\"flex items-center justify-between\">\n          {/* Logo */}\n          <button\n            onClick={() => scrollToSection('hero')}\n            className=\"text-2xl font-bold text-portfolio-cyan hover:text-portfolio-lightSlate transition-colors\"\n            style={{ fontFamily: 'Poppins, sans-serif' }}\n            data-testid=\"logo\"\n          >\n            SJ\n          </button>\n\n          {/* Desktop Menu */}\n          <div className=\"hidden md:flex items-center space-x-8\">\n            <button\n              onClick={() => scrollToSection('projects')}\n              className=\"text-portfolio-lightSlate hover:text-portfolio-cyan transition-colors\"\n              data-testid=\"nav-projects\"\n            >\n              Projects\n            </button>\n            <button\n              onClick={() => scrollToSection('skills')}\n              className=\"text-portfolio-lightSlate hover:text-portfolio-cyan transition-colors\"\n              data-testid=\"nav-skills\"\n            >\n              Skills\n            </button>\n            <button\n              onClick={() => scrollToSection('contact')}\n              className=\"text-portfolio-lightSlate hover:text-portfolio-cyan transition-colors\"\n              data-testid=\"nav-contact\"\n            >\n              Contact\n            </button>\n          </div>\n\n          {/* Mobile Menu Button */}\n          <button\n            className=\"md:hidden text-portfolio-lightSlate hover:text-portfolio-cyan transition-colors\"\n            onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}\n            data-testid=\"mobile-menu-button\"\n          >\n            <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n              {isMobileMenuOpen ? (\n                <path d=\"M18 6L6 18M6 6l12 12\" />\n              ) : (\n                <path d=\"M3 12h18M3 6h18M3 18h18\" />\n              )}\n            </svg>\n          </button>\n        </div>\n\n        {/* Mobile Menu */}\n        {isMobileMenuOpen && (\n          <div className=\"md:hidden mt-4 py-4 border-t border-portfolio-slate border-opacity-20\">\n            <div className=\"flex flex-col space-y-4\">\n              <button\n                onClick={() => scrollToSection('projects')}\n                className=\"text-portfolio-lightSlate hover:text-portfolio-cyan transition-colors text-left\"\n                data-testid=\"mobile-nav-projects\"\n              >\n                Projects\n              </button>\n              <button\n                onClick={() => scrollToSection('skills')}\n                className=\"text-portfolio-lightSlate hover:text-portfolio-cyan transition-colors text-left\"\n                data-testid=\"mobile-nav-skills\"\n              >\n                Skills\n              </button>\n              <button\n                onClick={() => scrollToSection('contact')}\n                className=\"text-portfolio-lightSlate hover:text-portfolio-cyan transition-colors text-left\"\n                data-testid=\"mobile-nav-contact\"\n              >\n                Contact\n              </button>\n            </div>\n          </div>\n        )}\n      </div>\n    </nav>\n  );\n};\n\nexport default Navigation;","size_bytes":4179},"client/src/components/Preloader.tsx":{"content":"import { useEffect, useState } from 'react';\n\nconst Preloader = () => {\n  const [isVisible, setIsVisible] = useState(true);\n  const [isAnimating, setIsAnimating] = useState(true);\n\n  useEffect(() => {\n    // Check if user prefers reduced motion\n    const prefersReducedMotion = window.matchMedia('(prefers-reduced-motion: reduce)').matches;\n    \n    if (prefersReducedMotion) {\n      setTimeout(() => setIsVisible(false), 500);\n      return;\n    }\n\n    // Start fade out after 2.5 seconds, complete by 3 seconds\n    const timer = setTimeout(() => {\n      setIsAnimating(false);\n      setTimeout(() => setIsVisible(false), 500);\n    }, 2500);\n\n    return () => clearTimeout(timer);\n  }, []);\n\n  if (!isVisible) return null;\n\n  return (\n    <div \n      className={`fixed inset-0 z-50 bg-portfolio-navy flex items-center justify-center transition-opacity duration-500 ${\n        isAnimating ? 'opacity-100' : 'opacity-0'\n      }`}\n      style={{ background: '#0a192f' }}\n    >\n      <div className=\"relative\">\n        <svg\n          width=\"120\"\n          height=\"120\"\n          viewBox=\"0 0 120 120\"\n          className=\"text-portfolio-cyan\"\n          data-testid=\"preloader-logo\"\n        >\n          {/* S Letter */}\n          <path\n            d=\"M25 45 Q15 35, 25 25 L35 25 Q55 25, 55 45 Q55 55, 35 55 L25 55 Q5 55, 5 75 Q5 85, 15 85 L25 85 Q35 85, 35 75\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth=\"3\"\n            strokeLinecap=\"round\"\n            className=\"animate-draw-s\"\n            style={{\n              strokeDasharray: '240',\n              strokeDashoffset: '240',\n              animation: 'drawPath 1.5s ease-out forwards'\n            }}\n          />\n          \n          {/* J Letter */}\n          <path\n            d=\"M45 30 Q45 20, 55 20 L75 20 Q85 20, 85 30 L85 70 Q85 90, 65 90 L55 90 Q35 90, 35 70 L35 65\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth=\"3\"\n            strokeLinecap=\"round\"\n            className=\"animate-draw-j\"\n            style={{\n              strokeDasharray: '200',\n              strokeDashoffset: '200',\n              animation: 'drawPath 1.5s ease-out 0.3s forwards'\n            }}\n          />\n        </svg>\n\n        <style>\n          {`\n          @keyframes drawPath {\n            to {\n              stroke-dashoffset: 0;\n            }\n          }\n          `}\n        </style>\n      </div>\n    </div>\n  );\n};\n\nexport default Preloader;","size_bytes":2454},"client/src/components/ProjectCard.tsx":{"content":"import { useState } from 'react';\nimport { Card } from '@/components/ui/card';\n\ninterface Project {\n  id: string;\n  title: string;\n  description: string;\n  technologies: string[];\n  image: string;\n  caseStudyLink: string;\n  github?: string;\n}\n\ninterface ProjectCardProps {\n  project: Project;\n}\n\nconst ProjectCard = ({ project }: ProjectCardProps) => {\n  const [imageLoaded, setImageLoaded] = useState(false);\n\n  return (\n    <Card \n      className=\"group bg-card border-card-border overflow-hidden hover-elevate transition-all duration-500 cursor-pointer\"\n      onClick={() => {\n        console.log(`Opening project: ${project.title}`);\n        if (project.caseStudyLink && project.caseStudyLink !== '#') {\n          if (project.caseStudyLink.startsWith('/')) {\n            window.location.href = project.caseStudyLink;\n          } else {\n            window.open(project.caseStudyLink, '_blank');\n          }\n        }\n      }}\n      data-testid={`project-card-${project.id}`}\n    >\n      {/* Project Image */}\n      <div className=\"relative h-48 overflow-hidden bg-muted\">\n        <div\n          className={`absolute inset-0 bg-gradient-to-br from-portfolio-navy to-portfolio-slate transition-opacity duration-300 ${\n            imageLoaded ? 'opacity-0' : 'opacity-100'\n          }`}\n        />\n        <img\n          src={project.image}\n          alt={project.title}\n          className=\"w-full h-full object-cover transition-transform duration-500 group-hover:scale-105\"\n          onLoad={() => setImageLoaded(true)}\n          onError={() => setImageLoaded(true)}\n        />\n        \n        {/* Overlay on hover */}\n        <div className=\"absolute inset-0 bg-portfolio-navy bg-opacity-0 group-hover:bg-opacity-80 transition-all duration-300 flex items-center justify-center\">\n          <div className=\"opacity-0 group-hover:opacity-100 transition-opacity duration-300 text-center\">\n            <button className=\"text-portfolio-cyan border border-portfolio-cyan px-4 py-2 hover:bg-portfolio-cyan hover:text-portfolio-navy transition-colors\">\n              View Project\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* Project Info */}\n      <div className=\"p-6\">\n        <h3 className=\"text-xl font-bold text-card-foreground mb-3\" data-testid={`project-title-${project.id}`}>\n          {project.title}\n        </h3>\n        \n        <p className=\"text-muted-foreground mb-4 text-sm leading-relaxed\">\n          {project.description}\n        </p>\n\n        {/* Technologies */}\n        <div className=\"flex flex-wrap gap-2 mb-4\">\n          {project.technologies.map((tech, index) => (\n            <span \n              key={index}\n              className=\"text-xs px-2 py-1 bg-secondary text-secondary-foreground rounded\"\n              data-testid={`tech-${project.id}-${index}`}\n            >\n              {tech}\n            </span>\n          ))}\n        </div>\n\n        {/* Links */}\n        <div className=\"flex gap-3 text-sm\">\n          {project.github && (\n            <button \n              className=\"text-muted-foreground hover:text-foreground hover:underline\"\n              onClick={(e) => {\n                e.stopPropagation();\n                window.open(project.github, '_blank');\n              }}\n              data-testid={`project-github-${project.id}`}\n            >\n              GitHub →\n            </button>\n          )}\n        </div>\n      </div>\n    </Card>\n  );\n};\n\nexport default ProjectCard;","size_bytes":3452},"client/src/components/ProjectGrid.tsx":{"content":"import { useEffect, useRef, useState } from 'react';\nimport ProjectCard from './ProjectCard';\n\nconst projects = [\n  {\n    id: 'alphintra',\n    title: 'Alphintra',\n    description: 'A cloud-native algorithmic trading platform with a no-code strategy builder.',\n    technologies: ['Java', 'Python', 'Spring Boot', 'FastAPI', 'Next.js', 'PostgreSQL', 'Docker', 'Microservices', 'ML'],\n    image: 'https://images.unsplash.com/photo-1611974789855-9c2a0a7236a3?w=600&h=400&fit=crop',\n    caseStudyLink: '/projects/alphintra'\n  },\n  {\n    id: 'vinnagam',\n    title: 'Vinnagam',\n    description: 'A freelance guest house booking system featuring booking management and secure payments.',\n    technologies: ['TypeScript', 'Next.js', 'Express.js', 'PostgreSQL', 'Prisma', 'AWS', 'Docker'],\n    image: 'https://images.unsplash.com/photo-1566073771259-6a8506099945?w=600&h=400&fit=crop',\n    caseStudyLink: '/projects/vinnagam',\n    github: 'https://github.com/Jathukulann/Vinnagam'\n  },\n  {\n    id: 'free-write',\n    title: 'Free-Write',\n    description: 'A collaborative social storytelling platform with a built-in marketplace and chat.',\n    technologies: ['PHP', 'HTML/CSS', 'Azure SQL', 'Docker', 'MVC Architecture'],\n    image: 'https://images.unsplash.com/photo-1455390582262-044cdead277a?w=600&h=400&fit=crop',\n    caseStudyLink: '/projects/free-write',\n    github: 'https://github.com/tharindu-dm/Free-Write'\n  },\n  {\n    id: 'agromart',\n    title: 'AgroMart',\n    description: 'A MERN-stack e-commerce application with secure payment processing via Stripe.',\n    technologies: ['React.js', 'Node.js', 'Express.js', 'MongoDB'],\n    image: 'https://images.unsplash.com/photo-1560472354-b33ff0c44a43?w=600&h=400&fit=crop',\n    caseStudyLink: '/projects/agromart',\n    github: 'https://github.com/lagithan/AgroMart1'\n  }\n];\n\nconst ProjectGrid = () => {\n  const [visibleCards, setVisibleCards] = useState<Set<number>>(new Set());\n  const cardRefs = useRef<(HTMLDivElement | null)[]>([]);\n\n  useEffect(() => {\n    const prefersReducedMotion = window.matchMedia('(prefers-reduced-motion: reduce)').matches;\n    if (prefersReducedMotion) {\n      setVisibleCards(new Set(projects.map((_, index) => index)));\n      return;\n    }\n\n    const observer = new IntersectionObserver(\n      (entries) => {\n        entries.forEach((entry, index) => {\n          if (entry.isIntersecting) {\n            const cardIndex = cardRefs.current.indexOf(entry.target as HTMLDivElement);\n            if (cardIndex !== -1) {\n              setTimeout(() => {\n                setVisibleCards(prev => new Set(prev).add(cardIndex));\n              }, cardIndex * 200); // Stagger the animations\n            }\n          }\n        });\n      },\n      {\n        threshold: 0.2,\n        rootMargin: '0px 0px -50px 0px'\n      }\n    );\n\n    cardRefs.current.forEach(ref => {\n      if (ref) observer.observe(ref);\n    });\n\n    return () => {\n      cardRefs.current.forEach(ref => {\n        if (ref) observer.unobserve(ref);\n      });\n    };\n  }, []);\n\n  return (\n    <section id=\"projects\" className=\"py-24 bg-background\">\n      <div className=\"max-w-6xl mx-auto px-8\">\n        <div className=\"text-center mb-16\">\n          <h2 \n            className=\"text-4xl md:text-5xl font-bold text-foreground mb-6\"\n            style={{ fontFamily: 'Poppins, sans-serif' }}\n            data-testid=\"projects-title\"\n          >\n            Featured Projects\n          </h2>\n          <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto leading-relaxed\">\n            A showcase of my recent work, featuring full-stack applications that solve real-world problems\n            through innovative technology and thoughtful user experience design.\n          </p>\n        </div>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n          {projects.map((project, index) => (\n            <div\n              key={project.id}\n              ref={el => cardRefs.current[index] = el}\n              className={`transition-all duration-700 ${\n                visibleCards.has(index) \n                  ? 'opacity-100 translate-y-0' \n                  : 'opacity-0 translate-y-8'\n              }`}\n              style={{\n                transitionDelay: `${index * 100}ms`\n              }}\n            >\n              <ProjectCard project={project} />\n            </div>\n          ))}\n        </div>\n\n      </div>\n    </section>\n  );\n};\n\nexport default ProjectGrid;","size_bytes":4417},"client/src/data/caseStudies.ts":{"content":"// Case study data structure - will be expanded with detailed content\nexport interface CaseStudyData {\n  slug: string;\n  title: string;\n  subtitle: string;\n  heroImage: string;\n  status: 'In Development' | 'Prototype' | 'Concept' | 'Private Beta';\n  ctas: {\n    repo?: string;\n    video?: string;\n    demo?: string;\n    localDemo?: boolean;\n  };\n  metrics: {\n    label: string;\n    value: string;\n    type?: 'Projected' | 'Simulated' | 'Benchmark' | 'Test Data';\n    methodology?: string;\n  }[];\n  overview: {\n    role: string;\n    team: string[];\n    tools: string[];\n    duration: string;\n    description: string;\n  };\n  problem: {\n    statement: string;\n    userPainPoints: string[];\n    businessChallenges: string[];\n  };\n  process: {\n    methodology: string;\n    steps: {\n      title: string;\n      description: string;\n      insights: string[];\n      image?: string;\n    }[];\n  };\n  solution: {\n    overview: string;\n    keyFeatures: {\n      title: string;\n      description: string;\n      icon: string;\n    }[];\n    mockupImages: string[];\n    technicalHighlights: string[];\n  };\n  impact: {\n    statement: string;\n    metrics: {\n      label: string;\n      value: string;\n      change: string;\n      positive: boolean;\n      type?: 'Projected' | 'Simulated' | 'Benchmark' | 'Test Data';\n      methodology?: string;\n    }[];\n    testimonials?: {\n      quote: string;\n      author: string;\n      role: string;\n      type: 'Real' | 'Beta Interview' | 'Concept Validation' | 'Fictional';\n    }[];\n    achievements: string[];\n  };\n  learnings: {\n    challenges: {\n      title: string;\n      description: string;\n      solution: string;\n    }[];\n    keyLearnings: string[];\n    nextSteps: string[];\n    reflection: string;\n  };\n}\n\n// Case study data - will be expanded with detailed content for each project\nexport const caseStudiesData: Record<string, CaseStudyData> = {\n  'alphintra': {\n    slug: 'alphintra',\n    title: 'Alphintra',\n    subtitle: 'A cloud-native algorithmic trading platform with a no-code strategy builder',\n    heroImage: 'https://images.unsplash.com/photo-1611974789855-9c2a0a7236a3?w=1200&h=800&fit=crop',\n    status: 'In Development',\n    ctas: {\n    },\n    // Note: Repository is private\n    metrics: [\n      { label: 'Load Testing Performance', value: '300%', type: 'Benchmark', methodology: 'Compared to baseline implementation using k6 testing' },\n      { label: 'UI Development Time', value: '75% Faster', type: 'Projected', methodology: 'Estimated based on drag-and-drop vs manual coding' },\n      { label: 'Test Coverage', value: '95%', type: 'Benchmark', methodology: 'Jest unit tests and integration test coverage' }\n    ],\n    overview: {\n      role: 'Full-Stack Developer & System Architect',\n      team: ['5-Member Team: 1 Project Manager', '1 Tester', '1 Frontend Developer', '3 Full-Stack Developers'],\n      tools: ['Java', 'Python', 'Spring Boot', 'FastAPI', 'Next.js', 'PostgreSQL', 'Docker', 'Kubernetes', 'ML'],\n      duration: '6 months',\n      description: `Alphintra revolutionizes algorithmic trading by democratizing access to sophisticated trading strategies. The platform combines powerful microservices architecture with an intuitive no-code interface, enabling traders to build, test, and deploy complex strategies without programming knowledge.\n\nBuilt with scalability in mind, the system handles thousands of concurrent trading operations while maintaining microsecond-level precision. The integration of machine learning models provides intelligent market analysis and strategy optimization, giving users a competitive edge in the fast-paced trading environment.`\n    },\n    problem: {\n      statement: 'Traditional algorithmic trading platforms require extensive programming knowledge, but traders who understand markets cannot create strategies without coding skills. Our platform enables traders to build strategies using a no-code interface, removing technical barriers while eliminating emotional trading decisions.',\n      userPainPoints: [\n        'Only programmers can create strategies, but traders with market knowledge cannot participate',\n        'Expensive infrastructure costs for hosting and maintaining trading systems',\n        'Emotional and greedy decision-making leading to poor trading outcomes',\n        'Complex deployment processes and system maintenance requirements',\n        'No marketplace for sharing and monetizing successful trading strategies'\n      ],\n      businessChallenges: [\n        'Market dominated by enterprise-level solutions with high entry costs',\n        'Fragmented ecosystem with multiple tools required for complete trading workflow',\n        'Scalability issues when handling large volumes of concurrent trades',\n        'Regulatory compliance requirements across multiple jurisdictions',\n        'Need for real-time data processing with minimal latency'\n      ]\n    },\n    process: {\n      methodology: 'I followed a user-centered design approach combined with agile development methodology, focusing on iterative development and continuous user feedback to ensure the platform met real-world trading needs.',\n      steps: [\n        {\n          title: 'Market Research & User Interviews',\n          description: 'Conducted extensive interviews with 25+ traders across different experience levels to understand pain points and workflow requirements.',\n          insights: [\n            'Visual strategy building was the most requested feature',\n            'Real-time performance monitoring was critical for user confidence',\n            'Integration with multiple data sources was essential'\n          ]\n        },\n        {\n          title: 'System Architecture Design',\n          description: 'Designed a microservices architecture optimized for high-frequency trading with fault tolerance and horizontal scalability.',\n          insights: [\n            'Event-driven architecture reduced system coupling',\n            'Containerization enabled seamless deployment and scaling',\n            'API-first design facilitated future integrations'\n          ]\n        },\n        {\n          title: 'MVP Development & Testing',\n          description: 'Built and tested core functionality with a small group of beta users, focusing on the no-code strategy builder and backtesting engine.',\n          insights: [\n            'User feedback shaped the drag-and-drop interface design',\n            'Performance optimization was crucial for user adoption',\n            'Comprehensive error handling improved user experience'\n          ]\n        }\n      ]\n    },\n    solution: {\n      overview: 'A comprehensive cloud-native platform that democratizes algorithmic trading through an intuitive no-code interface, backed by enterprise-grade infrastructure and machine learning capabilities.',\n      keyFeatures: [\n        {\n          title: 'No-Code Strategy Builder',\n          description: 'Allows traders (not just programmers) to create strategies using drag-and-drop interface',\n          icon: 'Target'\n        },\n        {\n          title: 'Strategy Marketplace',\n          description: 'Platform where users can buy and sell successful trading strategies',\n          icon: 'Store'\n        },\n        {\n          title: 'Automated Trading',\n          description: 'Eliminates emotional decisions and greed through fully automated execution',\n          icon: 'Zap'\n        },\n        {\n          title: 'Real-Time Analytics',\n          description: 'Live performance monitoring with comprehensive risk management tools',\n          icon: 'BarChart3'\n        },\n        {\n          title: 'ML-Powered Insights',\n          description: 'Machine learning models for market analysis and strategy optimization',\n          icon: 'Bot'\n        }\n      ],\n      mockupImages: [\n        'https://images.unsplash.com/photo-1551288049-bebda4e38f71?w=800&h=600&fit=crop',\n        'https://images.unsplash.com/photo-1460925895917-afdab827c52f?w=800&h=600&fit=crop'\n      ],\n      technicalHighlights: [\n        'Microservices architecture with Docker and Kubernetes orchestration',\n        'Event-driven communication using Apache Kafka for real-time data streaming',\n        'Machine learning pipeline with Python and TensorFlow for strategy optimization',\n        'High-performance Java backend with Spring Boot handling 10,000+ requests/second',\n        'Real-time WebSocket connections for live trading data and notifications',\n        'Comprehensive API documentation with automated testing and monitoring'\n      ]\n    },\n    impact: {\n      statement: 'Alphintra demonstrates advanced full-stack capabilities in building scalable financial applications with complex real-time requirements and enterprise-grade architecture.',\n      metrics: [\n        { label: 'Load Testing', value: '10K+', change: 'Requests/sec', positive: true, type: 'Benchmark', methodology: 'k6 load testing with simulated trading data' },\n        { label: 'Response Time', value: '<50ms', change: 'Average API response', positive: true, type: 'Benchmark', methodology: 'Lighthouse and custom performance monitoring' },\n        { label: 'Test Coverage', value: '95%', change: 'Code coverage', positive: true, type: 'Benchmark', methodology: 'Jest unit and integration tests' },\n        { label: 'Code Quality', value: 'A+', change: 'SonarQube rating', positive: true, type: 'Benchmark', methodology: 'Static code analysis and code review metrics' }\n      ],\n      testimonials: [\n        {\n          quote: 'This platform has great potential and addresses real problems in algorithmic trading. The no-code approach could democratize strategy creation.',\n          author: 'CEO & Founder',\n          role: 'Technology Company',\n          type: 'Real'\n        },\n        {\n          quote: 'The drag-and-drop interface concept would significantly reduce strategy development time compared to traditional coding approaches.',\n          author: 'Trading Industry Expert',\n          role: 'Concept Validation Interview',\n          type: 'Concept Validation'\n        }\n      ],\n      achievements: [\n        'Built scalable microservices architecture handling 10K+ concurrent operations in testing',\n        'Implemented real-time WebSocket connections with <50ms latency',\n        'Achieved 95% test coverage with comprehensive unit and integration tests',\n        'Designed intuitive drag-and-drop interface reducing development complexity by 75%',\n        'Integrated with multiple market data APIs and payment processing systems'\n      ]\n    },\n    learnings: {\n      challenges: [\n        {\n          title: 'Real-Time Data Processing at Scale',\n          description: 'Managing thousands of concurrent data streams while maintaining low latency proved challenging with the initial architecture.',\n          solution: 'Implemented event-driven microservices with Apache Kafka and optimized data pipelines, reducing processing time by 60%.'\n        },\n        {\n          title: 'User Interface Complexity',\n          description: 'Balancing powerful functionality with ease of use in the no-code builder required multiple design iterations.',\n          solution: 'Conducted extensive user testing and implemented progressive disclosure patterns to gradually reveal advanced features.'\n        }\n      ],\n      keyLearnings: [\n        'Performance optimization is crucial for user adoption in trading applications',\n        'User feedback during development phases significantly improved the final product',\n        'Microservices architecture provides excellent scalability but requires careful service design',\n        'Real-time monitoring and alerting are essential for maintaining user trust',\n        'Documentation and developer experience are as important as the core functionality'\n      ],\n      nextSteps: [\n        'Implement advanced ML models for predictive market analysis',\n        'Expand integration with additional international brokers and exchanges',\n        'Develop mobile application for strategy monitoring and management',\n        'Add collaborative features for strategy sharing and community building',\n        'Enhance risk management tools with more sophisticated algorithms'\n      ],\n      reflection: 'Building Alphintra taught me the importance of understanding both technical requirements and user psychology in financial applications. The project challenged me to balance complex backend systems with intuitive user experiences, ultimately creating a platform that democratizes sophisticated trading capabilities.'\n    }\n  },\n  'vinnagam': {\n    slug: 'vinnagam',\n    title: 'Vinnagam',\n    subtitle: 'A comprehensive guest house booking system with secure payments and modern management features',\n    heroImage: 'https://images.unsplash.com/photo-1566073771259-6a8506099945?w=1200&h=800&fit=crop',\n    status: 'Prototype',\n    ctas: {\n      repo: 'https://github.com/Jathukulann/Vinnagam'\n    },\n    metrics: [\n      { label: 'Performance Score', value: '95+', type: 'Benchmark', methodology: 'Lighthouse performance audit' },\n      { label: 'Page Load Time', value: '<2s', type: 'Benchmark', methodology: 'GTmetrix and Chrome DevTools analysis' },\n      { label: 'Mobile Responsiveness', value: '100%', type: 'Test Data', methodology: 'Cross-device testing on 5+ screen sizes' }\n    ],\n    overview: {\n      role: 'Full-Stack Developer',\n      team: ['Solo Project'],\n      tools: ['TypeScript', 'Next.js', 'Express.js', 'PostgreSQL', 'Prisma', 'AWS', 'Docker', 'Stripe'],\n      duration: '4 months',\n      description: `Vinnagam is a modern guest house booking system that I developed independently to streamline operations and enhance guest experiences. As a solo full-stack project, I handled everything from system architecture to deployment, creating a platform that manages reservation processing, secure payments, and comprehensive business analytics.\n\nThe system features a responsive design that works seamlessly across all devices, allowing guests to easily browse availability and make bookings while providing comprehensive management tools for tracking reservations, managing rates, and analyzing business performance. This project demonstrates my ability to deliver complete end-to-end solutions as an individual developer.`\n    },\n    problem: {\n      statement: 'The guest house owner was managing bookings through phone calls and manual record-keeping, leading to double bookings, missed opportunities, and poor guest experience due to inefficient processes.',\n      userPainPoints: [\n        'Guests had to call during business hours to check availability',\n        'No online presence to showcase facilities and amenities',\n        'Manual payment processing creating security concerns',\n        'Difficulty finding contact information and location details',\n        'No way to view real-time availability or pricing'\n      ],\n      businessChallenges: [\n        'Lost bookings due to missed phone calls or delayed responses',\n        'Double bookings from manual record-keeping errors',\n        'Lack of online visibility limiting market reach',\n        'Time-consuming manual processes reducing operational efficiency',\n        'No data insights for pricing optimization and business growth'\n      ]\n    },\n    process: {\n      methodology: 'I used a client-centered approach with regular feedback sessions, starting with understanding the business operations and gradually building features that directly addressed operational pain points.',\n      steps: [\n        {\n          title: 'Business Analysis & Requirements',\n          description: 'Conducted detailed interviews with the guest house owner to understand current processes, pain points, and desired outcomes.',\n          insights: [\n            'Manual processes were causing 20% revenue loss due to missed bookings',\n            'Seasonal pricing flexibility was crucial for business sustainability',\n            'Mobile-first design was essential as most guests use phones'\n          ]\n        },\n        {\n          title: 'System Design & Architecture',\n          description: 'Designed a scalable architecture with real-time availability updates, secure payment processing, and comprehensive admin features.',\n          insights: [\n            'Real-time synchronization prevented double bookings',\n            'Automated email confirmations improved guest confidence',\n            'Dashboard analytics provided valuable business insights'\n          ]\n        },\n        {\n          title: 'Development & Testing',\n          description: 'Built the platform incrementally, testing each feature with real booking scenarios and gathering continuous feedback.',\n          insights: [\n            'User testing revealed need for simplified booking flow',\n            'Performance optimization was critical for mobile users',\n            'Admin interface required intuitive design for non-technical user'\n          ]\n        }\n      ]\n    },\n    solution: {\n      overview: 'A complete booking management solution featuring real-time availability, secure payments, automated communications, and comprehensive business analytics.',\n      keyFeatures: [\n        {\n          title: 'Online Booking System',\n          description: 'Real-time availability calendar with instant booking confirmation',\n          icon: 'Calendar'\n        },\n        {\n          title: 'Secure Payments',\n          description: 'Integrated Stripe processing for safe and reliable transactions',\n          icon: 'CreditCard'\n        },\n        {\n          title: 'Manager Dashboard',\n          description: 'Comprehensive management interface for bookings, rates, and analytics',\n          icon: 'BarChart3'\n        },\n        {\n          title: 'Guest Communication',\n          description: 'Automated email confirmations and booking reminders',\n          icon: 'Mail'\n        }\n      ],\n      mockupImages: [\n        'https://images.unsplash.com/photo-1551882547-ff40c63fe5fa?w=800&h=600&fit=crop',\n        'https://images.unsplash.com/photo-1460925895917-afdab827c52f?w=800&h=600&fit=crop'\n      ],\n      technicalHighlights: [\n        'Next.js with TypeScript for type-safe development and optimal performance',\n        'PostgreSQL with Prisma ORM for reliable data management',\n        'Stripe integration for PCI-compliant payment processing',\n        'AWS deployment with Docker containerization',\n        'Responsive design optimized for mobile and desktop',\n        'Real-time availability updates preventing double bookings'\n      ]\n    },\n    impact: {\n      statement: 'Vinnagam showcases end-to-end full-stack development skills from database design to payment integration, demonstrating ability to build production-ready business applications.',\n      metrics: [\n        { label: 'Database Queries', value: '<100ms', change: 'Average response time', positive: true, type: 'Benchmark', methodology: 'PostgreSQL query optimization and indexing' },\n        { label: 'Payment Integration', value: '100%', change: 'Stripe compliance', positive: true, type: 'Test Data', methodology: 'Successfully processed test transactions' },\n        { label: 'Form Validation', value: '10+', change: 'Error scenarios handled', positive: true, type: 'Test Data', methodology: 'Comprehensive input validation testing' },\n        { label: 'Responsive Design', value: '5+', change: 'Device breakpoints', positive: true, type: 'Test Data', methodology: 'Cross-device compatibility testing' }\n      ],\n      testimonials: [\n        {\n          quote: 'The booking flow is intuitive and would definitely improve our current manual process. The admin dashboard looks very professional.',\n          author: 'Industry Professional',\n          role: 'Hospitality Sector Review',\n          type: 'Concept Validation'\n        }\n      ],\n      achievements: [\n        'Built real-time availability system preventing double bookings',\n        'Integrated Stripe payment processing with full PCI compliance',\n        'Implemented responsive design working across all device types',\n        'Created comprehensive admin dashboard with booking analytics',\n        'Developed automated email confirmation and reminder system'\n      ]\n    },\n    learnings: {\n      challenges: [\n        {\n          title: 'User Experience for Non-Technical Client',\n          description: 'The admin interface needed to be intuitive for someone without technical background while providing comprehensive functionality.',\n          solution: 'Implemented progressive disclosure and contextual help, with extensive user testing and iterative improvements based on feedback.'\n        },\n        {\n          title: 'Payment Integration Complexity',\n          description: 'Integrating Stripe while ensuring PCI compliance and handling various payment scenarios proved challenging.',\n          solution: 'Used Stripe\\'s hosted checkout for security and implemented comprehensive error handling and webhook processing.'\n        }\n      ],\n      keyLearnings: [\n        'Client communication and regular feedback are crucial for successful freelance projects',\n        'Understanding the business context is as important as technical implementation',\n        'Simple, intuitive interfaces often require more complex backend logic',\n        'Performance optimization is critical for mobile users in hospitality',\n        'Automated processes can dramatically improve small business efficiency'\n      ],\n      nextSteps: [\n        'Add multi-language support for international guests',\n        'Implement advanced analytics and reporting features',\n        'Integrate with additional payment methods for global reach',\n        'Add guest review and feedback system',\n        'Develop mobile app for enhanced guest experience'\n      ],\n      reflection: 'Working on Vinnagam taught me the importance of understanding small business needs and translating them into technical solutions. This project demonstrated how technology can significantly impact small businesses when implemented thoughtfully.'\n    }\n  },\n\n  'free-write': {\n    slug: 'free-write',\n    title: 'Free-Write',\n    subtitle: 'A Platform to Free-Write Fantasies of Readers - Interactive Reader-Writer Community',\n    heroImage: 'https://images.unsplash.com/photo-1455390582262-044cdead277a?w=1200&h=800&fit=crop',\n    status: 'In Development',\n    ctas: {\n      repo: 'https://github.com/tharindu-dm/Free-Write'\n    },\n    metrics: [\n      { label: 'Platform Features Implemented', value: '85%', type: 'Test Data', methodology: 'Based on functional requirements completion from project proposal' },\n      { label: 'User Types Supported', value: '9 Roles', type: 'Benchmark', methodology: 'Complete user role system: Visitors, Readers, Writers, Publishers, Cover Designers, Couriers, Institutions, Moderators, Administrators' },\n      { label: 'Development Timeline', value: '6 Months', type: 'Benchmark', methodology: 'Academic project timeline with team collaboration and iterative development' }\n    ],\n    overview: {\n      role: 'Full-Stack Developer & Team Member',\n      team: ['4-Member Development Team'],\n      tools: ['HTML', 'CSS', 'JavaScript', 'PHP', 'MySQL', 'Apache HTTP Server', 'GitHub'],\n      duration: '6 months (Academic Project)',\n      description: `Free Write is a comprehensive web-based platform that addresses the disconnect in the literary community by creating an interactive reader-writer ecosystem. The platform enables writers to showcase their work with content protection while allowing readers to create meaningful spin-offs through a structured branching system.\n\nBuilt using LAMP stack architecture, the platform features a sophisticated user role system supporting writers, readers, publishers, cover designers, and institutions. The unique spin-off system allows readers to branch existing stories while maintaining clear distinctions between original works and fan fiction, fostering creative collaboration without compromising intellectual property rights.`\n    },\n    problem: {\n      statement: 'Writers struggle to gain exposure while readers face challenges contributing to beloved stories due to copyright restrictions, integrity concerns, and lack of dedicated platforms for meaningful literary community interaction.',\n      userPainPoints: [\n        'New writers struggle to gain exposure and reach target audiences',\n        'Writers fear plagiarism and unauthorized use of their content',\n        'Readers cannot legally create spin-offs or alternative storylines',\n        'Limited access to publishers and cover artists for aspiring writers',\n        'No centralized platform for literary community networking',\n        'Book cover artists lack recognition and sustainable income opportunities'\n      ],\n      businessChallenges: [\n        'Fragmented literary ecosystem with disconnected stakeholders',\n        'Copyright and legal ambiguities in derivative works',\n        'Difficulty for publishers to discover talented writers',\n        'Traditional publishing process barriers for new authors',\n        'Lack of monetization opportunities for creative contributors',\n        'Need for content protection without stifling community engagement'\n      ]\n    },\n    process: {\n      methodology: 'Our team employed an academic project methodology with collaborative development using GitHub for version control, iterative feature development, and comprehensive requirement analysis based on real literary community needs.',\n      steps: [\n        {\n          title: 'Requirements Analysis & Project Planning',\n          description: 'Conducted comprehensive analysis of literary community needs and defined functional requirements for all user types including writers, readers, publishers, and institutions.',\n          insights: [\n            'Identified 9 distinct user roles requiring different platform features',\n            'Copyright protection emerged as critical requirement for writer adoption',\n            'Spin-off system needed clear guidelines to prevent legal issues'\n          ]\n        },\n        {\n          title: 'LAMP Stack Architecture Design',\n          description: 'Designed full-stack web application using HTML/CSS/JavaScript frontend with PHP backend, MySQL database, and Apache server deployment.',\n          insights: [\n            'LAMP stack provided reliable foundation for academic project timeline',\n            'GitHub version control enabled effective team collaboration',\n            'Modular architecture supported iterative feature development'\n          ]\n        },\n        {\n          title: 'Feature Implementation & Testing',\n          description: 'Developed comprehensive platform features including user authentication, story creation, spin-off system, and networking tools for publishers and cover artists.',\n          insights: [\n            'User role system complexity required careful database design',\n            'Content protection features essential for writer confidence',\n            'Community feedback tools improved platform engagement and retention'\n          ]\n        }\n      ]\n    },\n    solution: {\n      overview: 'Free Write is a comprehensive web-based platform that connects writers and readers through an interactive community featuring a unique branching system for spin-off stories, networking tools for publishers and cover artists, and robust content protection mechanisms.',\n      keyFeatures: [\n        {\n          title: 'Interactive Spin-off System',\n          description: 'Readers can create story branches and request integration with original narratives',\n          icon: 'GitBranch'\n        },\n        {\n          title: 'Writer-Publisher Networking',\n          description: 'Platform connecting writers with publishers and cover artists',\n          icon: 'Network'\n        },\n        {\n          title: 'Content Protection',\n          description: 'Robust copyright management and clear derivative work guidelines',\n          icon: 'Shield'\n        },\n        {\n          title: 'Multi-Role Community',\n          description: '9 user types including writers, readers, publishers, institutions',\n          icon: 'Users'\n        }\n      ],\n      mockupImages: [\n        'https://images.unsplash.com/photo-1432821596592-e2c18b78144f?w=800&h=600&fit=crop',\n        'https://images.unsplash.com/photo-1471107340929-a87cd0f5b5f3?w=800&h=600&fit=crop'\n      ],\n      technicalHighlights: [\n        'Full LAMP stack implementation with PHP backend and MySQL database',\n        'Apache HTTP server deployment for reliable web service hosting',\n        'Complete user authentication and role-based access control system',\n        'Interactive spin-off branching system with story management features',\n        'Responsive HTML/CSS/JavaScript frontend optimized for all user types',\n        'GitHub-based version control enabling effective team collaboration',\n        'Comprehensive user role system supporting 9 different stakeholder types'\n      ]\n    },\n    impact: {\n      statement: 'Free Write successfully addresses the disconnect in the literary community by creating a comprehensive platform that empowers writers with exposure and protection while enabling meaningful reader engagement through structured spin-off systems.',\n      metrics: [\n        { label: 'Technical Architecture Completion', value: '100%', change: 'Full LAMP stack implementation', positive: true, type: 'Benchmark', methodology: 'Complete PHP backend with MySQL database and Apache server deployment' },\n        { label: 'User Interface Development', value: '90%', change: 'Responsive design achieved', positive: true, type: 'Benchmark', methodology: 'HTML/CSS/JavaScript frontend with user-friendly interface for all user roles' },\n        { label: 'Team Collaboration Efficiency', value: '95%', change: 'Version control mastery', positive: true, type: 'Benchmark', methodology: 'GitHub-based collaborative development with effective workload distribution' },\n        { label: 'Feature Implementation', value: '85%', change: 'Requirements completion', positive: true, type: 'Benchmark', methodology: 'Functional requirements from project proposal successfully implemented' }\n      ],\n      testimonials: [\n        {\n          quote: 'This is a very good platform. I encourage you to continue developing this concept as it addresses real needs in the literary community.',\n          author: 'Academic Supervisor',\n          role: 'Project Evaluation Committee',\n          type: 'Real'\n        },\n        {\n          quote: 'What will you do when a writer uploads AI-generated content? You should prevent it, because in this world of AI technologies, we want to preserve human nature in writing.',\n          author: 'Interview Panel Member',\n          role: 'Project Defense',\n          type: 'Real'\n        },\n        {\n          quote: 'The comprehensive approach to addressing multiple stakeholder needs in the literary community shows excellent systems thinking.',\n          author: 'Industry Mentor',\n          role: 'Software Development Consultant',\n          type: 'Beta Interview'\n        }\n      ],\n      achievements: [\n        'Successfully implemented full-stack web application using LAMP technology stack',\n        'Developed comprehensive user role system supporting 9 different user types',\n        'Created interactive spin-off branching system for collaborative storytelling',\n        'Implemented secure user authentication and content protection features',\n        'Established effective team collaboration workflow using GitHub version control',\n        'Completed 6-month academic project with functional platform demonstration',\n        'Designed and implemented responsive user interface for optimal user experience'\n      ]\n    },\n    learnings: {\n      challenges: [\n        {\n          title: 'Complex User Role System Implementation',\n          description: 'Managing 9 different user types with varying permissions and workflows required careful database design and access control.',\n          solution: 'Implemented comprehensive role-based access control system with clear user authentication and permission management using PHP and MySQL.'\n        },\n        {\n          title: 'Team Collaboration and Version Control',\n          description: 'Coordinating development work across a 4-member team required effective collaboration tools and workflows.',\n          solution: 'Established GitHub-based version control system with clear branching strategies and regular code reviews to ensure seamless team collaboration.'\n        }\n      ],\n      keyLearnings: [\n        'Academic project methodology provides excellent foundation for systematic development',\n        'LAMP stack offers reliable and well-documented technology foundation for web applications',\n        'Team collaboration skills are as important as technical implementation',\n        'Comprehensive requirement analysis prevents scope creep and ensures project success',\n        'Version control systems are essential for multi-developer projects',\n        'User role complexity requires careful planning and database design'\n      ],\n      nextSteps: [\n        'Implement remaining 15% of functional requirements from proposal',\n        'Add advanced monetization features for publishers and institutions',\n        'Enhance spin-off branching system with more sophisticated version control',\n        'Develop mobile-responsive optimizations for better user experience',\n        'Add comprehensive content moderation and copyright protection tools',\n        'Implement performance optimizations for larger user bases'\n      ],\n      reflection: 'Free Write was an excellent academic project that taught valuable lessons about full-stack development, team collaboration, and complex system design. Working with a team using GitHub for version control provided real-world development experience, while the LAMP stack implementation demonstrated the importance of choosing appropriate technologies for project requirements.'\n    }\n  },\n\n  'agromart': {\n    slug: 'agromart',\n    title: 'AgroMart',\n    subtitle: 'A dynamic MERN stack e-commerce platform for agricultural products with secure payment integration',\n    heroImage: 'https://images.unsplash.com/photo-1560472354-b33ff0c44a43?w=1200&h=800&fit=crop',\n    status: 'Prototype',\n    ctas: {\n      repo: 'https://github.com/lagithan/AgroMart1'\n    },\n    metrics: [\n      { label: 'Database Performance', value: '500ms', type: 'Benchmark', methodology: 'MongoDB query optimization testing' },\n      { label: 'Payment Integration', value: '100%', type: 'Test Data', methodology: 'Stripe payment flow testing' },\n      { label: 'RESTful APIs Implemented', value: '15+', type: 'Benchmark', methodology: 'Complete CRUD operations for products, users, orders, and payments' }\n    ],\n    overview: {\n      role: 'Full-Stack Developer',\n      team: ['5-Member Development Team'],\n      tools: ['React.js', 'Node.js', 'Express.js', 'MongoDB', 'Stripe API', 'RESTful APIs', 'JavaScript'],\n      duration: '5 months',\n      description: `AgroMart is a dynamic and fully-functional MERN stack e-commerce application built from the ground up as my first project in my software development journey. It serves as an online marketplace for agricultural products, offering a comprehensive shopping experience and management system.\n\nAs a team-based learning project, we focused on implementing and testing RESTful APIs for efficient client-server communication and integrated the Stripe API for secure online payment processing. The platform demonstrates core e-commerce functionality using an existing system approach rather than direct farm connections, providing valuable experience in full-stack development with MongoDB database management.`\n    },\n    problem: {\n      statement: 'As our first major development project, we needed to build a comprehensive e-commerce platform that would demonstrate mastery of MERN stack development, RESTful API design, and secure payment integration while providing practical experience with full-stack web development.',\n      userPainPoints: [\n        'Need to demonstrate proficiency in modern web development technologies',\n        'Understanding complex client-server communication patterns',\n        'Implementing secure payment processing systems',\n        'Managing team collaboration and version control workflows',\n        'Building responsive and user-friendly interfaces'\n      ],\n      businessChallenges: [\n        'Learning full-stack development from beginner to intermediate level',\n        'Implementing comprehensive CRUD operations with RESTful APIs',\n        'Integrating third-party payment services securely',\n        'Managing project timeline and deliverables as a team',\n        'Building production-quality code with proper error handling'\n      ]\n    },\n    process: {\n      methodology: 'We used an agile development approach with regular team meetings, focusing on learning MERN stack fundamentals while building a functional e-commerce platform through iterative development cycles.',\n      steps: [\n        {\n          title: 'Technology Learning & Setup',\n          description: 'As our first MERN project, we spent significant time understanding React.js, Node.js, Express.js, and MongoDB integration.',\n          insights: [\n            'MERN stack provided excellent full-stack learning experience',\n            'MongoDB offered flexible data modeling for e-commerce needs',\n            'RESTful API design principles were crucial for scalable architecture'\n          ]\n        },\n        {\n          title: 'API Development & Integration',\n          description: 'Focused heavily on implementing comprehensive RESTful APIs for all CRUD operations and integrating Stripe payment processing.',\n          insights: [\n            'Proper API structure ensured efficient client-server communication',\n            'Stripe integration taught us secure payment handling best practices',\n            'Error handling and validation were critical for robust APIs'\n          ]\n        },\n        {\n          title: 'Team Development & Testing',\n          description: 'Worked as a 5-member team to build features, conduct testing, and learn collaborative development practices.',\n          insights: [\n            'Team collaboration was essential for project success',\n            'Version control and code review processes improved code quality',\n            'Testing procedures helped identify and fix bugs early'\n          ]\n        }\n      ]\n    },\n    solution: {\n      overview: 'A comprehensive farm-to-table e-commerce platform that connects farmers directly with consumers, featuring real-time inventory, secure payments, and intelligent order matching.',\n      keyFeatures: [\n        {\n          title: 'Direct Farm Connection',\n          description: 'Browse and purchase directly from local farmers with full transparency',\n          icon: 'Truck'\n        },\n        {\n          title: 'Secure Payments',\n          description: 'Stripe-powered payment system ensuring safe transactions for all parties',\n          icon: 'DollarSign'\n        },\n        {\n          title: 'Inventory Management',\n          description: 'Real-time stock updates and automated availability tracking',\n          icon: 'Package'\n        },\n        {\n          title: 'Order Tracking',\n          description: 'Complete order journey from farm to delivery with live updates',\n          icon: 'Truck'\n        }\n      ],\n      mockupImages: [\n        'https://images.unsplash.com/photo-1542838132-92c53300491e?w=800&h=600&fit=crop',\n        'https://images.unsplash.com/photo-1556909114-f6e7ad7d3136?w=800&h=600&fit=crop'\n      ],\n      technicalHighlights: [\n        'MERN stack architecture for scalable, real-time performance',\n        'MongoDB with optimized queries for complex product relationships',\n        'Stripe integration supporting marketplace payments with automatic splits',\n        'JWT-based authentication with role-based access control',\n        'Responsive React interface optimized for both farmers and consumers',\n        'Real-time notifications for order updates and inventory changes'\n      ]\n    },\n    impact: {\n      statement: 'AgroMart demonstrated our team\\'s ability to build a comprehensive MERN stack application with complex features, serving as an excellent foundation project that established core full-stack development skills.',\n      metrics: [\n        { label: 'MERN Stack Mastery', value: '100%', change: 'Full implementation', positive: true, type: 'Benchmark', methodology: 'Successfully implemented all MERN components with CRUD operations' },\n        { label: 'API Endpoints', value: '15+', change: 'RESTful routes', positive: true, type: 'Benchmark', methodology: 'Complete product, user, order, and payment APIs' },\n        { label: 'Team Learning', value: '5', change: 'Members trained', positive: true, type: 'Test Data', methodology: 'All team members gained full-stack experience' },\n        { label: 'Development Skills', value: 'Advanced', change: 'From beginner', positive: true, type: 'Test Data', methodology: 'Progression from first project to production-ready code' }\n      ],\n      testimonials: [\n        {\n          quote: 'This project shows solid understanding of e-commerce fundamentals and MERN stack implementation. The API structure is well-designed.',\n          author: 'Technical Review',\n          role: 'Development Assessment',\n          type: 'Concept Validation'\n        }\n      ],\n      achievements: [\n        'Built complete MERN stack e-commerce application as first major project',\n        'Implemented 15+ RESTful API endpoints with full CRUD functionality',\n        'Successfully integrated Stripe payment processing with secure transactions',\n        'Established strong foundation in MongoDB database design and management',\n        'Gained valuable team collaboration and version control experience',\n        'Demonstrated progression from beginner to intermediate full-stack skills'\n      ]\n    },\n    learnings: {\n      challenges: [\n        {\n          title: 'First MERN Stack Implementation',\n          description: 'As our first major full-stack project, understanding the integration between React, Node.js, Express, and MongoDB required significant learning.',\n          solution: 'Dedicated time to understanding each technology individually before integrating, using documentation and tutorials extensively.'\n        },\n        {\n          title: 'Team Coordination and Development',\n          description: 'Coordinating development work among 5 team members while learning new technologies presented collaboration challenges.',\n          solution: 'Established clear communication channels, regular meetings, and version control practices to manage collaborative development.'\n        }\n      ],\n      keyLearnings: [\n        'MERN stack provides excellent foundation for modern web applications',\n        'RESTful API design principles are crucial for scalable backend architecture',\n        'Stripe integration taught valuable lessons about secure payment processing',\n        'Team collaboration and version control are essential skills for developers',\n        'First projects are invaluable for establishing development fundamentals',\n        'Not all projects need deployment to provide significant learning value'\n      ],\n      nextSteps: [\n        'Deploy the application to gain experience with production environments',\n        'Add mobile responsiveness for better user experience',\n        'Implement advanced features like real-time notifications',\n        'Add comprehensive testing suite for better code quality',\n        'Consider migrating to TypeScript for better type safety'\n      ],\n      reflection: 'AgroMart served as an excellent introduction to full-stack development, providing hands-on experience with the MERN stack. As my first major project, it established crucial development skills and demonstrated the importance of learning through building comprehensive applications, even without deployment.'\n    }\n  }\n};","size_bytes":44114},"client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"client/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"client/src/hooks/useMagneticEffect.ts":{"content":"import { useRef, useEffect, RefObject } from 'react';\n\ninterface MagneticConfig {\n  strength?: number;\n  scale?: number;\n}\n\nexport const useMagneticEffect = <T extends HTMLElement>(\n  config: MagneticConfig = {}\n): RefObject<T> => {\n  const elementRef = useRef<T>(null);\n  const { strength = 0.3, scale = 1.05 } = config;\n\n  useEffect(() => {\n    const element = elementRef.current;\n    if (!element) return;\n\n    const prefersReducedMotion = window.matchMedia('(prefers-reduced-motion: reduce)').matches;\n    if (prefersReducedMotion) return;\n\n    let animationId: number;\n\n    const handleMouseMove = (e: MouseEvent) => {\n      const rect = element.getBoundingClientRect();\n      const centerX = rect.left + rect.width / 2;\n      const centerY = rect.top + rect.height / 2;\n      \n      const deltaX = e.clientX - centerX;\n      const deltaY = e.clientY - centerY;\n      \n      const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n      const maxDistance = Math.max(rect.width, rect.height);\n      \n      if (distance < maxDistance) {\n        const pullX = deltaX * strength;\n        const pullY = deltaY * strength;\n        \n        element.style.transform = `translate(${pullX}px, ${pullY}px) scale(${scale})`;\n      }\n    };\n\n    const handleMouseLeave = () => {\n      // Smooth return to original position\n      const animate = () => {\n        const currentTransform = element.style.transform;\n        const translateMatch = currentTransform.match(/translate\\(([^,]+)px,\\s*([^)]+)px\\)/);\n        \n        if (translateMatch) {\n          const currentX = parseFloat(translateMatch[1]);\n          const currentY = parseFloat(translateMatch[2]);\n          \n          const newX = currentX * 0.9;\n          const newY = currentY * 0.9;\n          const newScale = 1 + (scale - 1) * 0.9;\n          \n          element.style.transform = `translate(${newX}px, ${newY}px) scale(${newScale})`;\n          \n          if (Math.abs(newX) > 0.1 || Math.abs(newY) > 0.1) {\n            animationId = requestAnimationFrame(animate);\n          } else {\n            element.style.transform = 'translate(0px, 0px) scale(1)';\n          }\n        }\n      };\n      \n      animate();\n    };\n\n    element.addEventListener('mousemove', handleMouseMove);\n    element.addEventListener('mouseleave', handleMouseLeave);\n\n    return () => {\n      if (animationId) cancelAnimationFrame(animationId);\n      if (element) {\n        element.removeEventListener('mousemove', handleMouseMove);\n        element.removeEventListener('mouseleave', handleMouseLeave);\n      }\n    };\n  }, [strength, scale]);\n\n  return elementRef;\n};","size_bytes":2603},"client/src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(\n  method: string,\n  url: string,\n  data?: unknown | undefined,\n): Promise<Response> {\n  const res = await fetch(url, {\n    method,\n    headers: data ? { \"Content-Type\": \"application/json\" } : {},\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\",\n  });\n\n  await throwIfResNotOk(res);\n  return res;\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    const res = await fetch(queryKey.join(\"/\") as string, {\n      credentials: \"include\",\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","size_bytes":1383},"client/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"client/src/pages/CaseStudyPage.tsx":{"content":"import { useRoute, useLocation } from 'wouter';\nimport { useEffect, useState } from 'react';\nimport CaseStudyNavigation from '@/components/CaseStudyNavigation';\nimport Footer from '@/components/Footer';\nimport CustomCursor from '@/components/CustomCursor';\nimport CaseStudyHero from '@/components/case-study/CaseStudyHero';\nimport ProjectOverview from '@/components/case-study/ProjectOverview';\nimport TheProblem from '@/components/case-study/TheProblem';\nimport TheProcess from '@/components/case-study/TheProcess';\nimport TheSolution from '@/components/case-study/TheSolution';\nimport TheImpact from '@/components/case-study/TheImpact';\nimport Learnings from '@/components/case-study/Learnings';\nimport { caseStudiesData, type CaseStudyData } from '@/data/caseStudies';\nimport MagneticButton from '@/components/MagneticButton';\n\nconst CaseStudyPage = () => {\n  const [, params] = useRoute('/projects/:slug');\n  const [, setLocation] = useLocation();\n  const [caseStudy, setCaseStudy] = useState<CaseStudyData | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    if (params?.slug) {\n      const data = caseStudiesData[params.slug];\n      if (data) {\n        setCaseStudy(data);\n      } else {\n        setCaseStudy(null);\n      }\n      setLoading(false);\n    }\n  }, [params?.slug]);\n\n  if (loading) {\n    return (\n      <div className=\"dark min-h-screen bg-portfolio-navy text-portfolio-lightSlate flex items-center justify-center\">\n        <CustomCursor />\n        <div className=\"text-center\">\n          <div className=\"w-16 h-16 border-4 border-portfolio-cyan border-t-transparent rounded-full animate-spin mx-auto mb-4\"></div>\n          <p className=\"text-portfolio-slate\">Loading case study...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (!caseStudy) {\n    return (\n      <div className=\"dark min-h-screen bg-portfolio-navy text-portfolio-lightSlate\">\n        <CustomCursor />\n        <CaseStudyNavigation />\n        <div className=\"min-h-screen flex items-center justify-center px-8\">\n          <div className=\"text-center max-w-md\">\n            <h1 className=\"text-4xl font-bold text-portfolio-lightSlate mb-4\">Case Study Not Found</h1>\n            <p className=\"text-portfolio-slate mb-8\">\n              The case study you're looking for doesn't exist or has been moved.\n            </p>\n            <MagneticButton \n              variant=\"primary\"\n              onClick={() => setLocation('/')}\n            >\n              Back to Portfolio\n            </MagneticButton>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"dark min-h-screen bg-portfolio-navy text-portfolio-lightSlate overflow-x-hidden\">\n      <CustomCursor />\n      <CaseStudyNavigation />\n      \n      <main>\n        {/* Hero Section - The Hook */}\n        <CaseStudyHero\n          title={caseStudy.title}\n          subtitle={caseStudy.subtitle}\n          heroImage={caseStudy.heroImage}\n          status={caseStudy.status}\n          ctas={caseStudy.ctas}\n          metrics={caseStudy.metrics}\n        />\n\n        {/* Project Overview */}\n        <ProjectOverview\n          role={caseStudy.overview.role}\n          team={caseStudy.overview.team}\n          tools={caseStudy.overview.tools}\n          duration={caseStudy.overview.duration}\n          overview={caseStudy.overview.description}\n        />\n\n        {/* The Problem */}\n        <TheProblem\n          problemStatement={caseStudy.problem.statement}\n          userPainPoints={caseStudy.problem.userPainPoints}\n          businessChallenges={caseStudy.problem.businessChallenges}\n        />\n\n        {/* The Process */}\n        <TheProcess\n          processSteps={caseStudy.process.steps}\n          methodology={caseStudy.process.methodology}\n        />\n\n        {/* The Solution */}\n        <TheSolution\n          solutionOverview={caseStudy.solution.overview}\n          keyFeatures={caseStudy.solution.keyFeatures}\n          mockupImages={caseStudy.solution.mockupImages}\n          technicalHighlights={caseStudy.solution.technicalHighlights}\n        />\n\n        {/* The Impact */}\n        <TheImpact\n          impactStatement={caseStudy.impact.statement}\n          metrics={caseStudy.impact.metrics}\n          testimonials={caseStudy.impact.testimonials || []}\n          achievements={caseStudy.impact.achievements}\n        />\n\n        {/* Learnings & Reflections */}\n        <Learnings\n          challenges={caseStudy.learnings.challenges}\n          keyLearnings={caseStudy.learnings.keyLearnings}\n          nextSteps={caseStudy.learnings.nextSteps}\n          reflection={caseStudy.learnings.reflection}\n        />\n\n        {/* Call to Action */}\n        <section className=\"py-24 bg-card\">\n          <div className=\"max-w-4xl mx-auto px-8 text-center\">\n            <h2 className=\"text-4xl font-bold text-card-foreground mb-6\">\n              Interested in working together?\n            </h2>\n            <p className=\"text-xl text-muted-foreground mb-8 leading-relaxed\">\n              I'm always excited to take on new challenges and create impactful solutions.\n              Let's discuss how I can help bring your ideas to life.\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n              <MagneticButton \n                variant=\"primary\"\n                className=\"text-lg px-8 py-4\"\n                onClick={() => {\n                  setLocation('/');\n                  // Add delay to ensure page loads before scrolling\n                  setTimeout(() => {\n                    const contactSection = document.getElementById('contact');\n                    if (contactSection) {\n                      contactSection.scrollIntoView({ behavior: 'smooth' });\n                    }\n                  }, 100);\n                }}\n              >\n                Get In Touch\n              </MagneticButton>\n              <MagneticButton \n                variant=\"outline\"\n                className=\"text-lg px-8 py-4\"\n                onClick={() => {\n                  setLocation('/');\n                  // Add delay to ensure page loads before scrolling\n                  setTimeout(() => {\n                    const projectsSection = document.getElementById('projects');\n                    if (projectsSection) {\n                      projectsSection.scrollIntoView({ behavior: 'smooth' });\n                    }\n                  }, 100);\n                }}\n              >\n                View More Projects\n              </MagneticButton>\n            </div>\n          </div>\n        </section>\n      </main>\n\n      <Footer />\n    </div>\n  );\n};\n\nexport default CaseStudyPage;","size_bytes":6642},"client/src/pages/HomePage.tsx":{"content":"import { useEffect, useState } from 'react';\nimport Hero from '@/components/Hero';\nimport About from '@/components/About';\nimport Skills from '@/components/Skills';\nimport ProjectGrid from '@/components/ProjectGrid';\nimport PlannedProjects from '@/components/PlannedProjects';\nimport ProfessionalExperience from '@/components/ProfessionalExperience';\nimport Experience from '@/components/Experience';\nimport Contact from '@/components/Contact';\nimport Navigation from '@/components/Navigation';\nimport Footer from '@/components/Footer';\nimport CustomCursor from '@/components/CustomCursor';\nimport Preloader from '@/components/Preloader';\n\nconst HomePage = () => {\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    // Simulate initial loading\n    const timer = setTimeout(() => {\n      setIsLoading(false);\n    }, 3000);\n\n    return () => clearTimeout(timer);\n  }, []);\n\n  return (\n    <div className=\"dark min-h-screen bg-portfolio-navy text-portfolio-lightSlate overflow-x-hidden\">\n      {/* Preloader */}\n      {isLoading && <Preloader />}\n      \n      {/* Custom Cursor */}\n      <CustomCursor />\n      \n      {/* Navigation */}\n      <Navigation />\n      \n      {/* Main Content */}\n      <main>\n        {/* Hero Section */}\n        <section id=\"hero\">\n          <Hero />\n        </section>\n        \n        {/* About Section */}\n        <About />\n        \n        {/* Skills Section */}\n        <Skills />\n        \n        {/* Projects Section */}\n        <ProjectGrid />\n        \n        {/* Planned Projects Section */}\n        <PlannedProjects />\n        \n        {/* Professional Experience Section */}\n        <ProfessionalExperience />\n        \n        {/* Experience & Leadership Section */}\n        <Experience />\n        \n        {/* Contact Section */}\n        <Contact />\n      </main>\n      \n      {/* Footer */}\n      <Footer />\n    </div>\n  );\n};\n\nexport default HomePage;","size_bytes":1919},"client/src/pages/not-found.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { AlertCircle } from \"lucide-react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-50\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex mb-4 gap-2\">\n            <AlertCircle className=\"h-8 w-8 text-red-500\" />\n            <h1 className=\"text-2xl font-bold text-gray-900\">404 Page Not Found</h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-gray-600\">\n            Did you forget to add the page to the router?\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":711},"client/src/components/case-study/CaseStudyHero.tsx":{"content":"import { useEffect, useRef, useState } from 'react';\n\ninterface CaseStudyHeroProps {\n  title: string;\n  subtitle: string;\n  heroImage: string;\n  status: 'In Development' | 'Prototype' | 'Concept' | 'Private Beta';\n  ctas: {\n    repo?: string;\n    video?: string;\n    demo?: string;\n    localDemo?: boolean;\n  };\n  metrics: {\n    label: string;\n    value: string;\n    type?: 'Projected' | 'Simulated' | 'Benchmark' | 'Test Data';\n    methodology?: string;\n  }[];\n}\n\nconst CaseStudyHero = ({ title, subtitle, heroImage, status, ctas, metrics }: CaseStudyHeroProps) => {\n  const [imageLoaded, setImageLoaded] = useState(false);\n  const [isVisible, setIsVisible] = useState(false);\n  const heroRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const prefersReducedMotion = window.matchMedia('(prefers-reduced-motion: reduce)').matches;\n    if (prefersReducedMotion) {\n      setIsVisible(true);\n      return;\n    }\n\n    setTimeout(() => setIsVisible(true), 500);\n  }, []);\n\n  return (\n    <section \n      ref={heroRef}\n      className=\"min-h-screen flex items-center justify-center bg-portfolio-navy relative overflow-hidden\"\n    >\n      {/* Background Image */}\n      <div className=\"absolute inset-0\">\n        <img\n          src={heroImage}\n          alt={title}\n          className={`w-full h-full object-cover transition-opacity duration-1000 ${\n            imageLoaded ? 'opacity-30' : 'opacity-0'\n          }`}\n          onLoad={() => setImageLoaded(true)}\n        />\n        <div className=\"absolute inset-0 bg-gradient-to-b from-portfolio-navy/80 via-portfolio-navy/60 to-portfolio-navy/90\"></div>\n      </div>\n\n      <div className=\"relative z-10 max-w-6xl mx-auto px-8 text-center\">\n        <div \n          className={`transition-all duration-1000 ${\n            isVisible ? 'opacity-100 translate-y-0' : 'opacity-0 translate-y-8'\n          }`}\n        >\n          {/* Status Badge */}\n          <div className=\"mb-6\">\n            <span className={`inline-block px-4 py-2 rounded-full text-sm font-medium ${\n              status === 'In Development' ? 'bg-blue-500/20 text-blue-400 border border-blue-500/30' :\n              status === 'Prototype' ? 'bg-yellow-500/20 text-yellow-400 border border-yellow-500/30' :\n              status === 'Concept' ? 'bg-purple-500/20 text-purple-400 border border-purple-500/30' :\n              'bg-green-500/20 text-green-400 border border-green-500/30'\n            }`} data-testid=\"project-status\">\n              {status}\n            </span>\n          </div>\n          \n          <h1 \n            className=\"text-6xl md:text-8xl font-bold text-portfolio-lightSlate mb-6\"\n            style={{ fontFamily: 'Poppins, sans-serif' }}\n            data-testid=\"case-study-title\"\n          >\n            {title}\n          </h1>\n          \n          <p \n            className=\"text-2xl md:text-3xl text-portfolio-slate mb-16 max-w-4xl mx-auto leading-relaxed\"\n            data-testid=\"case-study-subtitle\"\n          >\n            {subtitle}\n          </p>\n        </div>\n\n        {/* Success Metrics */}\n        <div \n          className={`grid grid-cols-1 md:grid-cols-3 gap-8 transition-all duration-1000 delay-500 ${\n            isVisible ? 'opacity-100 translate-y-0' : 'opacity-0 translate-y-8'\n          }`}\n        >\n          {metrics.map((metric, index) => (\n            <div \n              key={index}\n              className=\"bg-card/20 backdrop-blur-sm border border-card-border/30 rounded-lg p-6\"\n              data-testid={`metric-${index}`}\n            >\n              <div className=\"text-3xl md:text-4xl font-bold text-portfolio-cyan mb-2\">\n                {metric.value}\n              </div>\n              <div className=\"text-portfolio-lightSlate text-sm uppercase tracking-wider mb-2\">\n                {metric.label}\n              </div>\n              {metric.type && (\n                <div className=\"flex items-center justify-center\">\n                  <span className={`text-xs px-2 py-1 rounded-full ${\n                    metric.type === 'Benchmark' ? 'bg-green-500/20 text-green-400' :\n                    metric.type === 'Test Data' ? 'bg-blue-500/20 text-blue-400' :\n                    metric.type === 'Simulated' ? 'bg-yellow-500/20 text-yellow-400' :\n                    'bg-purple-500/20 text-purple-400'\n                  }`} title={metric.methodology || 'No methodology provided'}>\n                    {metric.type}\n                  </span>\n                </div>\n              )}\n            </div>\n          ))}\n        </div>\n\n        {/* CTAs */}\n        <div \n          className={`mt-12 flex flex-wrap justify-center gap-4 transition-all duration-1000 delay-700 ${\n            isVisible ? 'opacity-100 translate-y-0' : 'opacity-0 translate-y-8'\n          }`}\n        >\n          {ctas.repo && (\n            <a\n              href={ctas.repo}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"bg-card/20 backdrop-blur-sm border border-card-border/30 text-portfolio-lightSlate px-6 py-3 rounded-lg font-medium hover:bg-portfolio-cyan hover:text-portfolio-navy transition-all duration-300\"\n              data-testid=\"cta-repo\"\n            >\n              View Source Code\n            </a>\n          )}\n          {ctas.video && (\n            <a\n              href={ctas.video}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"bg-card/20 backdrop-blur-sm border border-card-border/30 text-portfolio-lightSlate px-6 py-3 rounded-lg font-medium hover:bg-portfolio-cyan hover:text-portfolio-navy transition-all duration-300\"\n              data-testid=\"cta-video\"\n            >\n              Video Walkthrough\n            </a>\n          )}\n          {ctas.localDemo && (\n            <span\n              className=\"bg-card/20 backdrop-blur-sm border border-card-border/30 text-portfolio-lightSlate px-6 py-3 rounded-lg font-medium cursor-help\"\n              title=\"Check README for local setup instructions\"\n              data-testid=\"cta-local\"\n            >\n              Local Demo Available\n            </span>\n          )}\n        </div>\n\n        {/* Scroll indicator */}\n        <div \n          className={`absolute bottom-8 left-1/2 transform -translate-x-1/2 transition-all duration-1000 delay-1000 ${\n            isVisible ? 'opacity-100' : 'opacity-0'\n          }`}\n        >\n          <div className=\"animate-bounce\">\n            <svg \n              width=\"24\" \n              height=\"14\" \n              viewBox=\"0 0 24 14\" \n              className=\"text-portfolio-slate\"\n            >\n              <path \n                d=\"M2 2L12 12L22 2\" \n                stroke=\"currentColor\" \n                strokeWidth=\"2\" \n                fill=\"none\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n              />\n            </svg>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default CaseStudyHero;","size_bytes":6931},"client/src/components/case-study/Learnings.tsx":{"content":"interface Challenge {\n  title: string;\n  description: string;\n  solution: string;\n}\n\ninterface LearningsProps {\n  challenges: Challenge[];\n  keyLearnings: string[];\n  nextSteps: string[];\n  reflection: string;\n}\n\nconst Learnings = ({ challenges, keyLearnings, nextSteps, reflection }: LearningsProps) => {\n  return (\n    <section className=\"py-24 bg-background\">\n      <div className=\"max-w-6xl mx-auto px-8\">\n        <div className=\"text-center mb-16\">\n          <h2 \n            className=\"text-4xl md:text-5xl font-bold text-foreground mb-6\"\n            style={{ fontFamily: 'Poppins, sans-serif' }}\n            data-testid=\"learnings-title\"\n          >\n            Learnings & Reflections\n          </h2>\n          <p \n            className=\"text-xl text-muted-foreground max-w-3xl mx-auto leading-relaxed\"\n            data-testid=\"reflection\"\n          >\n            {reflection}\n          </p>\n        </div>\n\n        {/* Challenges and Solutions */}\n        {challenges.length > 0 && (\n          <div className=\"mb-16\">\n            <h3 className=\"text-2xl font-bold text-foreground mb-8\">Challenges & How I Overcame Them</h3>\n            <div className=\"space-y-8\">\n              {challenges.map((challenge, index) => (\n                <div \n                  key={index}\n                  className=\"bg-card border border-card-border rounded-lg p-8\"\n                  data-testid={`challenge-${index}`}\n                >\n                  <h4 className=\"text-xl font-bold text-destructive mb-4\">{challenge.title}</h4>\n                  <p className=\"text-muted-foreground mb-4 leading-relaxed\">{challenge.description}</p>\n                  <div className=\"bg-background border border-border rounded-md p-4\">\n                    <div className=\"text-sm font-semibold text-portfolio-cyan mb-2\">Solution:</div>\n                    <p className=\"text-foreground\">{challenge.solution}</p>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12\">\n          {/* Key Learnings */}\n          <div>\n            <h3 className=\"text-2xl font-bold text-foreground mb-6\">Key Learnings</h3>\n            <div className=\"space-y-4\">\n              {keyLearnings.map((learning, index) => (\n                <div \n                  key={index}\n                  className=\"flex items-start space-x-4 p-4 bg-card border border-card-border rounded-lg\"\n                  data-testid={`learning-${index}`}\n                >\n                  <div className=\"w-2 h-2 bg-portfolio-cyan rounded-full mt-3 flex-shrink-0\"></div>\n                  <p className=\"text-card-foreground leading-relaxed\">{learning}</p>\n                </div>\n              ))}\n            </div>\n          </div>\n\n          {/* Next Steps */}\n          <div>\n            <h3 className=\"text-2xl font-bold text-foreground mb-6\">Next Steps & Future Improvements</h3>\n            <div className=\"space-y-4\">\n              {nextSteps.map((step, index) => (\n                <div \n                  key={index}\n                  className=\"flex items-start space-x-4 p-4 bg-card border border-card-border rounded-lg\"\n                  data-testid={`next-step-${index}`}\n                >\n                  <div className=\"w-2 h-2 bg-muted-foreground rounded-full mt-3 flex-shrink-0\"></div>\n                  <p className=\"text-card-foreground leading-relaxed\">{step}</p>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Learnings;","size_bytes":3597},"client/src/components/case-study/ProjectOverview.tsx":{"content":"interface ProjectOverviewProps {\n  role: string;\n  team: string[];\n  tools: string[];\n  duration: string;\n  overview: string;\n}\n\nconst ProjectOverview = ({ role, team, tools, duration, overview }: ProjectOverviewProps) => {\n  return (\n    <section className=\"py-24 bg-card\">\n      <div className=\"max-w-6xl mx-auto px-8\">\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-16 items-start\">\n          {/* Project Details */}\n          <div className=\"space-y-8\">\n            <h2 \n              className=\"text-4xl font-bold text-card-foreground mb-8\"\n              style={{ fontFamily: 'Poppins, sans-serif' }}\n              data-testid=\"overview-title\"\n            >\n              Project Overview\n            </h2>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div className=\"p-6 bg-background border border-border rounded-lg\">\n                <h3 className=\"text-lg font-semibold text-portfolio-cyan mb-3\">My Role</h3>\n                <p className=\"text-foreground\" data-testid=\"project-role\">{role}</p>\n              </div>\n\n              <div className=\"p-6 bg-background border border-border rounded-lg\">\n                <h3 className=\"text-lg font-semibold text-portfolio-cyan mb-3\">Duration</h3>\n                <p className=\"text-foreground\" data-testid=\"project-duration\">{duration}</p>\n              </div>\n            </div>\n\n            <div className=\"p-6 bg-background border border-border rounded-lg\">\n              <h3 className=\"text-lg font-semibold text-portfolio-cyan mb-4\">Team</h3>\n              <div className=\"flex flex-wrap gap-2\">\n                {team.map((member, index) => (\n                  <span \n                    key={index}\n                    className=\"px-3 py-1 bg-secondary text-secondary-foreground rounded-full text-sm\"\n                    data-testid={`team-member-${index}`}\n                  >\n                    {member}\n                  </span>\n                ))}\n              </div>\n            </div>\n\n            <div className=\"p-6 bg-background border border-border rounded-lg\">\n              <h3 className=\"text-lg font-semibold text-portfolio-cyan mb-4\">Tools & Technologies</h3>\n              <div className=\"flex flex-wrap gap-2\">\n                {tools.map((tool, index) => (\n                  <span \n                    key={index}\n                    className=\"px-3 py-1 bg-muted text-muted-foreground rounded-full text-sm\"\n                    data-testid={`tool-${index}`}\n                  >\n                    {tool}\n                  </span>\n                ))}\n              </div>\n            </div>\n          </div>\n\n          {/* Project Description */}\n          <div>\n            <h3 \n              className=\"text-2xl font-bold text-card-foreground mb-6\"\n              data-testid=\"overview-description-title\"\n            >\n              About This Project\n            </h3>\n            <div \n              className=\"text-muted-foreground leading-relaxed space-y-4\"\n              data-testid=\"project-overview\"\n            >\n              {overview.split('\\n\\n').map((paragraph, index) => (\n                <p key={index}>{paragraph}</p>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default ProjectOverview;","size_bytes":3300},"client/src/components/case-study/TheImpact.tsx":{"content":"interface Metric {\n  label: string;\n  value: string;\n  change: string;\n  positive: boolean;\n  type?: 'Projected' | 'Simulated' | 'Benchmark' | 'Test Data';\n  methodology?: string;\n}\n\ninterface Testimonial {\n  quote: string;\n  author: string;\n  role: string;\n  type: 'Real' | 'Beta Interview' | 'Concept Validation' | 'Fictional';\n}\n\ninterface TheImpactProps {\n  impactStatement: string;\n  metrics: Metric[];\n  testimonials: Testimonial[];\n  achievements: string[];\n}\n\nconst TheImpact = ({ impactStatement, metrics, testimonials, achievements }: TheImpactProps) => {\n  return (\n    <section className=\"py-24 bg-card\">\n      <div className=\"max-w-6xl mx-auto px-8\">\n        <div className=\"text-center mb-16\">\n          <h2 \n            className=\"text-4xl md:text-5xl font-bold text-card-foreground mb-6\"\n            style={{ fontFamily: 'Poppins, sans-serif' }}\n            data-testid=\"impact-title\"\n          >\n            The Impact\n          </h2>\n          <p \n            className=\"text-xl text-muted-foreground max-w-3xl mx-auto leading-relaxed\"\n            data-testid=\"impact-statement\"\n          >\n            {impactStatement}\n          </p>\n        </div>\n\n        {/* Metrics Grid */}\n        {metrics.length > 0 && (\n          <div className=\"mb-16\">\n            <h3 className=\"text-2xl font-bold text-card-foreground mb-8 text-center\">Quantifiable Results</h3>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n              {metrics.map((metric, index) => (\n                <div \n                  key={index}\n                  className=\"text-center p-6 bg-background border border-border rounded-lg\"\n                  data-testid={`metric-${index}`}\n                >\n                  <div className=\"text-4xl font-bold text-portfolio-cyan mb-2\">\n                    {metric.value}\n                  </div>\n                  <div className=\"text-sm text-muted-foreground mb-2 uppercase tracking-wider\">\n                    {metric.label}\n                  </div>\n                  <div className={`text-sm font-medium mb-2 ${\n                    metric.positive ? 'text-green-500' : 'text-red-500'\n                  }`}>\n                    {metric.change}\n                  </div>\n                  {metric.type && (\n                    <div className=\"mt-2\">\n                      <span className={`text-xs px-2 py-1 rounded-full ${\n                        metric.type === 'Benchmark' ? 'bg-green-500/20 text-green-400' :\n                        metric.type === 'Test Data' ? 'bg-blue-500/20 text-blue-400' :\n                        metric.type === 'Simulated' ? 'bg-yellow-500/20 text-yellow-400' :\n                        'bg-purple-500/20 text-purple-400'\n                      }`} title={metric.methodology || 'No methodology provided'}>\n                        {metric.type}\n                      </span>\n                    </div>\n                  )}\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n\n        {/* Testimonials */}\n        {testimonials.length > 0 && (\n          <div className=\"mb-16\">\n            <h3 className=\"text-2xl font-bold text-card-foreground mb-8 text-center\">What People Said</h3>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n              {testimonials.map((testimonial, index) => (\n                <div \n                  key={index}\n                  className=\"bg-background border border-border rounded-lg p-8\"\n                  data-testid={`testimonial-${index}`}\n                >\n                  <div className=\"text-4xl text-portfolio-cyan mb-4\">\"</div>\n                  <blockquote className=\"text-lg text-foreground leading-relaxed mb-6\">\n                    {testimonial.quote}\n                  </blockquote>\n                  <div>\n                    <div className=\"font-semibold text-card-foreground\">{testimonial.author}</div>\n                    <div className=\"text-sm text-muted-foreground mb-2\">{testimonial.role}</div>\n                    <span className={`text-xs px-2 py-1 rounded-full ${\n                      testimonial.type === 'Real' ? 'bg-green-500/20 text-green-400' :\n                      testimonial.type === 'Beta Interview' ? 'bg-blue-500/20 text-blue-400' :\n                      testimonial.type === 'Concept Validation' ? 'bg-yellow-500/20 text-yellow-400' :\n                      'bg-red-500/20 text-red-400'\n                    }`}>\n                      {testimonial.type}\n                    </span>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n\n        {/* Key Achievements */}\n        {achievements.length > 0 && (\n          <div className=\"bg-portfolio-cyan/10 border border-portfolio-cyan/20 rounded-lg p-8\">\n            <h3 className=\"text-2xl font-bold text-card-foreground mb-6 text-center\">Key Achievements</h3>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              {achievements.map((achievement, index) => (\n                <div \n                  key={index}\n                  className=\"flex items-start space-x-3\"\n                  data-testid={`achievement-${index}`}\n                >\n                  <div className=\"w-2 h-2 bg-portfolio-cyan rounded-full mt-3 flex-shrink-0\"></div>\n                  <span className=\"text-muted-foreground\">{achievement}</span>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default TheImpact;","size_bytes":5525},"client/src/components/case-study/TheProblem.tsx":{"content":"interface TheProblemProps {\n  userPainPoints: string[];\n  businessChallenges: string[];\n  problemStatement: string;\n}\n\nconst TheProblem = ({ userPainPoints, businessChallenges, problemStatement }: TheProblemProps) => {\n  return (\n    <section className=\"py-24 bg-background\">\n      <div className=\"max-w-6xl mx-auto px-8\">\n        <div className=\"text-center mb-16\">\n          <h2 \n            className=\"text-4xl md:text-5xl font-bold text-foreground mb-6\"\n            style={{ fontFamily: 'Poppins, sans-serif' }}\n            data-testid=\"problem-title\"\n          >\n            The Problem\n          </h2>\n          <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto leading-relaxed\">\n            Understanding the core challenges that needed to be solved\n          </p>\n        </div>\n\n        {/* Problem Statement */}\n        <div className=\"mb-16\">\n          <div className=\"bg-destructive/10 border border-destructive/20 rounded-lg p-8\">\n            <h3 className=\"text-2xl font-bold text-foreground mb-4\">Problem Statement</h3>\n            <p \n              className=\"text-lg text-muted-foreground leading-relaxed\"\n              data-testid=\"problem-statement\"\n            >\n              {problemStatement}\n            </p>\n          </div>\n        </div>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12\">\n          {/* User Pain Points */}\n          <div>\n            <h3 className=\"text-2xl font-bold text-foreground mb-6\">User Pain Points</h3>\n            <div className=\"space-y-4\">\n              {userPainPoints.map((point, index) => (\n                <div \n                  key={index}\n                  className=\"flex items-start space-x-4 p-4 bg-card border border-card-border rounded-lg\"\n                  data-testid={`user-pain-${index}`}\n                >\n                  <div className=\"w-2 h-2 bg-destructive rounded-full mt-3 flex-shrink-0\"></div>\n                  <p className=\"text-card-foreground\">{point}</p>\n                </div>\n              ))}\n            </div>\n          </div>\n\n          {/* Business Challenges */}\n          <div>\n            <h3 className=\"text-2xl font-bold text-foreground mb-6\">Business Challenges</h3>\n            <div className=\"space-y-4\">\n              {businessChallenges.map((challenge, index) => (\n                <div \n                  key={index}\n                  className=\"flex items-start space-x-4 p-4 bg-card border border-card-border rounded-lg\"\n                  data-testid={`business-challenge-${index}`}\n                >\n                  <div className=\"w-2 h-2 bg-destructive rounded-full mt-3 flex-shrink-0\"></div>\n                  <p className=\"text-card-foreground\">{challenge}</p>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default TheProblem;","size_bytes":2857},"client/src/components/case-study/TheProcess.tsx":{"content":"interface ProcessStep {\n  title: string;\n  description: string;\n  insights: string[];\n  image?: string;\n}\n\ninterface TheProcessProps {\n  processSteps: ProcessStep[];\n  methodology: string;\n}\n\nconst TheProcess = ({ processSteps, methodology }: TheProcessProps) => {\n  return (\n    <section className=\"py-24 bg-card\">\n      <div className=\"max-w-6xl mx-auto px-8\">\n        <div className=\"text-center mb-16\">\n          <h2 \n            className=\"text-4xl md:text-5xl font-bold text-card-foreground mb-6\"\n            style={{ fontFamily: 'Poppins, sans-serif' }}\n            data-testid=\"process-title\"\n          >\n            The Process\n          </h2>\n          <p \n            className=\"text-xl text-muted-foreground max-w-3xl mx-auto leading-relaxed mb-8\"\n            data-testid=\"methodology\"\n          >\n            {methodology}\n          </p>\n        </div>\n\n        {/* Process Steps */}\n        <div className=\"space-y-16\">\n          {processSteps.map((step, index) => (\n            <div \n              key={index}\n              className={`grid grid-cols-1 lg:grid-cols-2 gap-12 items-center ${\n                index % 2 === 1 ? 'lg:grid-flow-col-dense' : ''\n              }`}\n              data-testid={`process-step-${index}`}\n            >\n              {/* Content */}\n              <div className={index % 2 === 1 ? 'lg:col-start-2' : ''}>\n                <div className=\"flex items-center mb-4\">\n                  <div className=\"w-10 h-10 bg-portfolio-cyan text-portfolio-navy rounded-full flex items-center justify-center font-bold mr-4\">\n                    {index + 1}\n                  </div>\n                  <h3 className=\"text-2xl font-bold text-card-foreground\">{step.title}</h3>\n                </div>\n                \n                <p className=\"text-muted-foreground leading-relaxed mb-6\">\n                  {step.description}\n                </p>\n\n                {/* Key Insights */}\n                {step.insights.length > 0 && (\n                  <div>\n                    <h4 className=\"text-lg font-semibold text-portfolio-cyan mb-3\">Key Insights:</h4>\n                    <ul className=\"space-y-2\">\n                      {step.insights.map((insight, insightIndex) => (\n                        <li \n                          key={insightIndex}\n                          className=\"flex items-start space-x-3\"\n                          data-testid={`insight-${index}-${insightIndex}`}\n                        >\n                          <div className=\"w-1.5 h-1.5 bg-portfolio-cyan rounded-full mt-3 flex-shrink-0\"></div>\n                          <span className=\"text-muted-foreground\">{insight}</span>\n                        </li>\n                      ))}\n                    </ul>\n                  </div>\n                )}\n              </div>\n\n              {/* Image/Visual */}\n              <div className={index % 2 === 1 ? 'lg:col-start-1' : ''}>\n                {step.image ? (\n                  <div className=\"relative overflow-hidden rounded-lg bg-background border border-border\">\n                    <img\n                      src={step.image}\n                      alt={step.title}\n                      className=\"w-full h-auto object-cover\"\n                    />\n                  </div>\n                ) : (\n                  <div className=\"aspect-video bg-gradient-to-br from-secondary to-muted rounded-lg flex items-center justify-center\">\n                    <div className=\"text-center\">\n                      <div className=\"w-16 h-16 bg-portfolio-cyan/20 rounded-full flex items-center justify-center mx-auto mb-4\">\n                        <div className=\"w-8 h-8 bg-portfolio-cyan rounded-full\"></div>\n                      </div>\n                      <p className=\"text-muted-foreground text-sm\">Process Visualization</p>\n                    </div>\n                  </div>\n                )}\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default TheProcess;","size_bytes":3998},"client/src/components/case-study/TheSolution.tsx":{"content":"import React from 'react';\nimport { \n  Target, BarChart3, Cloud, Bot, Calendar, CreditCard, Mail, \n  Book, MessageCircle, PenTool, Users, Truck, DollarSign, Package \n} from 'lucide-react';\n\n// Icon mapping for features\nconst iconMap: Record<string, React.ComponentType<any>> = {\n  Target, BarChart3, Cloud, Bot, Calendar, CreditCard, Mail,\n  Book, MessageCircle, PenTool, Users, Truck, DollarSign, Package\n};\n\ninterface Feature {\n  title: string;\n  description: string;\n  icon: string;\n}\n\ninterface TheSolutionProps {\n  solutionOverview: string;\n  keyFeatures: Feature[];\n  mockupImages: string[];\n  technicalHighlights: string[];\n}\n\nconst TheSolution = ({ solutionOverview, keyFeatures, mockupImages, technicalHighlights }: TheSolutionProps) => {\n  return (\n    <section className=\"py-24 bg-background\">\n      <div className=\"max-w-6xl mx-auto px-8\">\n        <div className=\"text-center mb-16\">\n          <h2 \n            className=\"text-4xl md:text-5xl font-bold text-foreground mb-6\"\n            style={{ fontFamily: 'Poppins, sans-serif' }}\n            data-testid=\"solution-title\"\n          >\n            The Solution\n          </h2>\n          <p \n            className=\"text-xl text-muted-foreground max-w-3xl mx-auto leading-relaxed\"\n            data-testid=\"solution-overview\"\n          >\n            {solutionOverview}\n          </p>\n        </div>\n\n        {/* High-Resolution Mockups */}\n        {mockupImages.length > 0 && (\n          <div className=\"mb-16\">\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              {mockupImages.map((image, index) => (\n                <div \n                  key={index}\n                  className=\"relative overflow-hidden rounded-lg bg-card border border-card-border group\"\n                  data-testid={`mockup-${index}`}\n                >\n                  <img\n                    src={image}\n                    alt={`Solution mockup ${index + 1}`}\n                    className=\"w-full h-auto object-cover transition-transform duration-500 group-hover:scale-105\"\n                  />\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n\n        {/* Key Features Grid */}\n        <div className=\"mb-16\">\n          <h3 className=\"text-3xl font-bold text-foreground mb-8 text-center\">Key Features</h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n            {keyFeatures.map((feature, index) => (\n              <div \n                key={index}\n                className=\"p-6 bg-card border border-card-border rounded-lg hover-elevate transition-all duration-300\"\n                data-testid={`feature-${index}`}\n              >\n                <div className=\"mb-4\">\n                  {iconMap[feature.icon] ? (\n                    React.createElement(iconMap[feature.icon], { className: \"w-8 h-8 text-portfolio-cyan\" })\n                  ) : (\n                    <div className=\"w-8 h-8 bg-portfolio-cyan/20 rounded flex items-center justify-center text-portfolio-cyan text-sm font-bold\">\n                      {feature.icon.charAt(0)}\n                    </div>\n                  )}\n                </div>\n                <h4 className=\"text-xl font-bold text-card-foreground mb-3\">{feature.title}</h4>\n                <p className=\"text-muted-foreground\">{feature.description}</p>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Technical Highlights */}\n        {technicalHighlights.length > 0 && (\n          <div className=\"bg-card/50 border border-card-border rounded-lg p-8\">\n            <h3 className=\"text-2xl font-bold text-card-foreground mb-6\">Technical Highlights</h3>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              {technicalHighlights.map((highlight, index) => (\n                <div \n                  key={index}\n                  className=\"flex items-start space-x-3\"\n                  data-testid={`tech-highlight-${index}`}\n                >\n                  <div className=\"w-2 h-2 bg-portfolio-cyan rounded-full mt-3 flex-shrink-0\"></div>\n                  <span className=\"text-muted-foreground\">{highlight}</span>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default TheSolution;","size_bytes":4313},"client/src/components/examples/About.tsx":{"content":"import About from '../About';\n\nexport default function AboutExample() {\n  return <About />;\n}","size_bytes":93},"client/src/components/examples/Contact.tsx":{"content":"import Contact from '../Contact';\n\nexport default function ContactExample() {\n  return <Contact />;\n}","size_bytes":101},"client/src/components/examples/CustomCursor.tsx":{"content":"import CustomCursor from '../CustomCursor';\n\nexport default function CustomCursorExample() {\n  return (\n    <div className=\"h-screen bg-portfolio-navy p-8\">\n      <CustomCursor />\n      <div className=\"text-portfolio-lightSlate\">\n        <h2 className=\"text-2xl mb-4\">Move your cursor around</h2>\n        <button \n          className=\"px-4 py-2 border border-portfolio-cyan text-portfolio-cyan hover:bg-portfolio-cyan hover:text-portfolio-navy transition-colors\" \n          data-testid=\"test-button\"\n        >\n          Hover over me\n        </button>\n      </div>\n    </div>\n  );\n}","size_bytes":582},"client/src/components/examples/Experience.tsx":{"content":"import Experience from '../Experience';\n\nexport default function ExperienceExample() {\n  return <Experience />;\n}","size_bytes":113},"client/src/components/examples/Footer.tsx":{"content":"import Footer from '../Footer';\n\nexport default function FooterExample() {\n  return (\n    <div className=\"min-h-screen bg-background flex flex-col\">\n      <div className=\"flex-1 p-8\">\n        <h2 className=\"text-2xl text-foreground\">Footer Example</h2>\n        <p className=\"text-muted-foreground\">Footer component with social links</p>\n      </div>\n      <Footer />\n    </div>\n  );\n}","size_bytes":384},"client/src/components/examples/Hero.tsx":{"content":"import Hero from '../Hero';\n\nexport default function HeroExample() {\n  return <Hero />;\n}","size_bytes":89},"client/src/components/examples/MagneticButton.tsx":{"content":"import MagneticButton from '../MagneticButton';\n\nexport default function MagneticButtonExample() {\n  return (\n    <div className=\"h-screen bg-portfolio-navy p-8 flex flex-col items-center justify-center gap-6\">\n      <MagneticButton \n        variant=\"primary\"\n        onClick={() => console.log('Primary button clicked')}\n      >\n        View My Work\n      </MagneticButton>\n      \n      <MagneticButton \n        variant=\"secondary\"\n        onClick={() => console.log('Secondary button clicked')}\n      >\n        Get In Touch\n      </MagneticButton>\n      \n      <MagneticButton \n        variant=\"outline\"\n        onClick={() => console.log('Outline button clicked')}\n      >\n        Download Resume\n      </MagneticButton>\n    </div>\n  );\n}","size_bytes":741},"client/src/components/examples/Navigation.tsx":{"content":"import Navigation from '../Navigation';\n\nexport default function NavigationExample() {\n  return (\n    <div className=\"h-screen bg-background\">\n      <Navigation />\n      <div className=\"pt-20 p-8\">\n        <h2 className=\"text-2xl text-foreground\">Navigation Example</h2>\n        <p className=\"text-muted-foreground\">Scroll down to see the navigation background change</p>\n        <div className=\"h-screen\"></div>\n      </div>\n    </div>\n  );\n}","size_bytes":443},"client/src/components/examples/Preloader.tsx":{"content":"import Preloader from '../Preloader';\n\nexport default function PreloaderExample() {\n  return <Preloader />;\n}","size_bytes":109},"client/src/components/examples/ProjectCard.tsx":{"content":"import ProjectCard from '../ProjectCard';\n\nconst mockProject = {\n  id: 'example-project',\n  title: 'Example Project',\n  description: 'This is an example project showcasing the ProjectCard component with various technologies and features.',\n  technologies: ['React', 'TypeScript', 'Tailwind CSS'],\n  image: 'https://images.unsplash.com/photo-1461749280684-dccba630e2f6?w=600&h=400&fit=crop',\n  link: 'https://example.com',\n  github: 'https://github.com/example/project'\n};\n\nexport default function ProjectCardExample() {\n  return (\n    <div className=\"p-8 bg-background\">\n      <ProjectCard project={mockProject} />\n    </div>\n  );\n}","size_bytes":632},"client/src/components/examples/ProjectGrid.tsx":{"content":"import ProjectGrid from '../ProjectGrid';\n\nexport default function ProjectGridExample() {\n  return <ProjectGrid />;\n}","size_bytes":117},"client/src/components/examples/TechStack.tsx":{"content":"import TechStack from '../TechStack';\n\nexport default function TechStackExample() {\n  return <TechStack />;\n}","size_bytes":109},"client/src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"client/src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"client/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"client/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"client/src/components/ui/avatar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(`\n      after:content-[''] after:block after:absolute after:inset-0 after:rounded-full after:pointer-events-none after:border after:border-black/10 dark:after:border-white/10\n      relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full`,\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1592},"client/src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  // Whitespace-nowrap: Badges should never wrap.\n  \"whitespace-nowrap inline-flex items-center rounded-md border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\" +\n  \" hover-elevate \" ,\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground shadow-xs\",\n        secondary: \"border-transparent bg-secondary text-secondary-foreground\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground shadow-xs\",\n\n        outline: \" border [border-color:var(--badge-outline)] shadow-xs\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  },\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  );\n}\n\nexport { Badge, badgeVariants }\n","size_bytes":1202},"client/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2712},"client/src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\" +\n  \" hover-elevate active-elevate-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground border border-primary-border\",\n        destructive:\n          \"bg-destructive text-destructive-foreground border border-destructive-border\",\n        outline:\n          // Shows the background color of whatever card / sidebar / accent background it is inside of.\n          // Inherits the current text color.\n          \" border [border-color:var(--button-outline)]  shadow-xs active:shadow-none \",\n        secondary: \"border bg-secondary text-secondary-foreground border border-secondary-border \",\n        // Add a transparent border so that when someone toggles a border on later, it doesn't shift layout/size.\n        ghost: \"border border-transparent\",\n      },\n      // Heights are set as \"min\" heights, because sometimes Ai will place large amount of content\n      // inside buttons. With a min-height they will look appropriate with small amounts of content,\n      // but will expand to fit large amounts of content.\n      size: {\n        default: \"min-h-9 px-4 py-2\",\n        sm: \"min-h-8 rounded-md px-3 text-xs\",\n        lg: \"min-h-10 rounded-md px-8\",\n        icon: \"h-9 w-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  },\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  },\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":2359},"client/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2695},"client/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"shadcn-card rounded-xl border bg-card border-card-border text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n));\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n));\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n));\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardDescription,\n  CardContent,\n}\n","size_bytes":1904},"client/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"client/src/components/ui/chart.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10481},"client/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"client/src/components/ui/collapsible.tsx":{"content":"\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":329},"client/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4885},"client/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7428},"client/src/components/ui/dialog.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3848},"client/src/components/ui/drawer.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3021},"client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7609},"client/src/components/ui/form.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4120},"client/src/components/ui/hover-card.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1251},"client/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"client/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    // h-9 to match icon buttons and default buttons.\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-9 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":844},"client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/components/ui/menubar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":8605},"client/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5128},"client/src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1280},"client/src/components/ui/progress.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":791},"client/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"client/src/components/ui/resizable.tsx":{"content":"\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1723},"client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"client/src/components/ui/select.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-9 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5741},"client/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"client/src/components/ui/sheet.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4281},"client/src/components/ui/sidebar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, VariantProps } from \"class-variance-authority\"\nimport { PanelLeftIcon } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nfunction SidebarProvider({\n  defaultOpen = true,\n  open: openProp,\n  onOpenChange: setOpenProp,\n  className,\n  style,\n  children,\n  ...props\n}: React.ComponentProps<\"div\"> & {\n  defaultOpen?: boolean\n  open?: boolean\n  onOpenChange?: (open: boolean) => void\n}) {\n  const isMobile = useIsMobile()\n  const [openMobile, setOpenMobile] = React.useState(false)\n\n  // This is the internal state of the sidebar.\n  // We use openProp and setOpenProp for control from outside the component.\n  const [_open, _setOpen] = React.useState(defaultOpen)\n  const open = openProp ?? _open\n  const setOpen = React.useCallback(\n    (value: boolean | ((value: boolean) => boolean)) => {\n      const openState = typeof value === \"function\" ? value(open) : value\n      if (setOpenProp) {\n        setOpenProp(openState)\n      } else {\n        _setOpen(openState)\n      }\n\n      // This sets the cookie to keep the sidebar state.\n      document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n    },\n    [setOpenProp, open]\n  )\n\n  // Helper to toggle the sidebar.\n  const toggleSidebar = React.useCallback(() => {\n    return isMobile ? setOpenMobile((open) => !open) : setOpen((open) => !open)\n  }, [isMobile, setOpen, setOpenMobile])\n\n  // Adds a keyboard shortcut to toggle the sidebar.\n  React.useEffect(() => {\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (\n        event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n        (event.metaKey || event.ctrlKey)\n      ) {\n        event.preventDefault()\n        toggleSidebar()\n      }\n    }\n\n    window.addEventListener(\"keydown\", handleKeyDown)\n    return () => window.removeEventListener(\"keydown\", handleKeyDown)\n  }, [toggleSidebar])\n\n  // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n  // This makes it easier to style the sidebar with Tailwind classes.\n  const state = open ? \"expanded\" : \"collapsed\"\n\n  const contextValue = React.useMemo<SidebarContextProps>(\n    () => ({\n      state,\n      open,\n      setOpen,\n      isMobile,\n      openMobile,\n      setOpenMobile,\n      toggleSidebar,\n    }),\n    [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n  )\n\n  return (\n    <SidebarContext.Provider value={contextValue}>\n      <TooltipProvider delayDuration={0}>\n        <div\n          data-slot=\"sidebar-wrapper\"\n          style={\n            {\n              \"--sidebar-width\": SIDEBAR_WIDTH,\n              \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n              ...style,\n            } as React.CSSProperties\n          }\n          className={cn(\n            \"group/sidebar-wrapper has-data-[variant=inset]:bg-sidebar flex min-h-svh w-full\",\n            className\n          )}\n          {...props}\n        >\n          {children}\n        </div>\n      </TooltipProvider>\n    </SidebarContext.Provider>\n  )\n}\n\nfunction Sidebar({\n  side = \"left\",\n  variant = \"sidebar\",\n  collapsible = \"offcanvas\",\n  className,\n  children,\n  ...props\n}: React.ComponentProps<\"div\"> & {\n  side?: \"left\" | \"right\"\n  variant?: \"sidebar\" | \"floating\" | \"inset\"\n  collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n}) {\n  const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n  if (collapsible === \"none\") {\n    return (\n      <div\n        data-slot=\"sidebar\"\n        className={cn(\n          \"bg-sidebar text-sidebar-foreground flex h-full w-[var(--sidebar-width)] flex-col\",\n          className\n        )}\n        {...props}\n      >\n        {children}\n      </div>\n    )\n  }\n\n  if (isMobile) {\n    return (\n      <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n        <SheetContent\n          data-sidebar=\"sidebar\"\n          data-slot=\"sidebar\"\n          data-mobile=\"true\"\n          className=\"bg-sidebar text-sidebar-foreground w-[var(--sidebar-width)] p-0 [&>button]:hidden\"\n          style={\n            {\n              \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n            } as React.CSSProperties\n          }\n          side={side}\n        >\n          <SheetHeader className=\"sr-only\">\n            <SheetTitle>Sidebar</SheetTitle>\n            <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n          </SheetHeader>\n          <div className=\"flex h-full w-full flex-col\">{children}</div>\n        </SheetContent>\n      </Sheet>\n    )\n  }\n\n  return (\n    <div\n      className=\"group peer text-sidebar-foreground hidden md:block\"\n      data-state={state}\n      data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n      data-variant={variant}\n      data-side={side}\n      data-slot=\"sidebar\"\n    >\n      {/* This is what handles the sidebar gap on desktop */}\n      <div\n        data-slot=\"sidebar-gap\"\n        className={cn(\n          \"relative w-[var(--sidebar-width)] bg-transparent transition-[width] duration-200 ease-linear\",\n          \"group-data-[collapsible=offcanvas]:w-0\",\n          \"group-data-[side=right]:rotate-180\",\n          variant === \"floating\" || variant === \"inset\"\n            ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)+var(--spacing-4))]\"\n            : \"group-data-[collapsible=icon]:w-[var(--sidebar-width-icon)]\"\n        )}\n      />\n      <div\n        data-slot=\"sidebar-container\"\n        className={cn(\n          \"fixed inset-y-0 z-10 hidden h-svh w-[var(--sidebar-width)] transition-[left,right,width] duration-200 ease-linear md:flex\",\n          side === \"left\"\n            ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n            : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n          // Adjust the padding for floating and inset variants.\n          variant === \"floating\" || variant === \"inset\"\n            ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)+var(--spacing-4)+2px)]\"\n            : \"group-data-[collapsible=icon]:w-[var(--sidebar-width-icon)] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n          className\n        )}\n        {...props}\n      >\n        <div\n          data-sidebar=\"sidebar\"\n          data-slot=\"sidebar-inner\"\n          className=\"bg-sidebar group-data-[variant=floating]:border-sidebar-border flex h-full w-full flex-col group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:shadow-sm\"\n        >\n          {children}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nfunction SidebarTrigger({\n  className,\n  onClick,\n  ...props\n}: React.ComponentProps<typeof Button>) {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      data-sidebar=\"trigger\"\n      data-slot=\"sidebar-trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeftIcon />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n}\n\nfunction SidebarRail({ className, ...props }: React.ComponentProps<\"button\">) {\n  const { toggleSidebar } = useSidebar()\n\n  // Note: Tailwind v3.4 doesn't support \"in-\" selectors. So the rail won't work perfectly.\n  return (\n    <button\n      data-sidebar=\"rail\"\n      data-slot=\"sidebar-rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"hover:after:bg-sidebar-border absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear group-data-[side=left]:-right-4 group-data-[side=right]:left-0 after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] sm:flex\",\n        \"in-data-[side=left]:cursor-w-resize in-data-[side=right]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"hover:group-data-[collapsible=offcanvas]:bg-sidebar group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarInset({ className, ...props }: React.ComponentProps<\"main\">) {\n  return (\n    <main\n      data-slot=\"sidebar-inset\"\n      className={cn(\n        \"bg-background relative flex w-full flex-1 flex-col\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow-sm md:peer-data-[variant=inset]:peer-data-[state=collapsed]:ml-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarInput({\n  className,\n  ...props\n}: React.ComponentProps<typeof Input>) {\n  return (\n    <Input\n      data-slot=\"sidebar-input\"\n      data-sidebar=\"input\"\n      className={cn(\"bg-background h-8 w-full shadow-none\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-header\"\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-footer\"\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarSeparator({\n  className,\n  ...props\n}: React.ComponentProps<typeof Separator>) {\n  return (\n    <Separator\n      data-slot=\"sidebar-separator\"\n      data-sidebar=\"separator\"\n      className={cn(\"bg-sidebar-border mx-2 w-auto\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-content\"\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarGroup({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-group\"\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarGroupLabel({\n  className,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"div\"> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      data-slot=\"sidebar-group-label\"\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"text-sidebar-foreground/70 ring-sidebar-ring flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium outline-hidden transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:h-4 [&>svg]:w-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarGroupAction({\n  className,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"sidebar-group-action\"\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"text-sidebar-foreground ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground absolute top-3.5 right-3 flex aspect-square w-5 items-center justify-center rounded-md p-0 outline-hidden transition-transform focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 md:after:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarGroupContent({\n  className,\n  ...props\n}: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-group-content\"\n      data-sidebar=\"group-content\"\n      className={cn(\"w-full text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenu({ className, ...props }: React.ComponentProps<\"ul\">) {\n  return (\n    <ul\n      data-slot=\"sidebar-menu\"\n      data-sidebar=\"menu\"\n      className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenuItem({ className, ...props }: React.ComponentProps<\"li\">) {\n  return (\n    <li\n      data-slot=\"sidebar-menu-item\"\n      data-sidebar=\"menu-item\"\n      className={cn(\"group/menu-item relative\", className)}\n      {...props}\n    />\n  )\n}\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-hidden ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-data-[sidebar=menu-action]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:w-8! group-data-[collapsible=icon]:h-8! group-data-[collapsible=icon]:p-2! [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:p-0!\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction SidebarMenuButton({\n  asChild = false,\n  isActive = false,\n  variant = \"default\",\n  size = \"default\",\n  tooltip,\n  className,\n  ...props\n}: React.ComponentProps<\"button\"> & {\n  asChild?: boolean\n  isActive?: boolean\n  tooltip?: string | React.ComponentProps<typeof TooltipContent>\n} & VariantProps<typeof sidebarMenuButtonVariants>) {\n  const Comp = asChild ? Slot : \"button\"\n  const { isMobile, state } = useSidebar()\n\n  const button = (\n    <Comp\n      data-slot=\"sidebar-menu-button\"\n      data-sidebar=\"menu-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n      {...props}\n    />\n  )\n\n  if (!tooltip) {\n    return button\n  }\n\n  if (typeof tooltip === \"string\") {\n    tooltip = {\n      children: tooltip,\n    }\n  }\n\n  return (\n    <Tooltip>\n      <TooltipTrigger asChild>{button}</TooltipTrigger>\n      <TooltipContent\n        side=\"right\"\n        align=\"center\"\n        hidden={state !== \"collapsed\" || isMobile}\n        {...tooltip}\n      />\n    </Tooltip>\n  )\n}\n\nfunction SidebarMenuAction({\n  className,\n  asChild = false,\n  showOnHover = false,\n  ...props\n}: React.ComponentProps<\"button\"> & {\n  asChild?: boolean\n  showOnHover?: boolean\n}) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"sidebar-menu-action\"\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"text-sidebar-foreground ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground peer-hover/menu-button:text-sidebar-accent-foreground absolute top-1.5 right-1 flex aspect-square w-5 items-center justify-center rounded-md p-0 outline-hidden transition-transform focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 md:after:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"peer-data-[active=true]/menu-button:text-sidebar-accent-foreground group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenuBadge({\n  className,\n  ...props\n}: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-menu-badge\"\n      data-sidebar=\"menu-badge\"\n      className={cn(\n        \"text-sidebar-foreground pointer-events-none absolute right-1 flex h-5 min-w-5 items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums select-none\",\n        \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenuSkeleton({\n  className,\n  showIcon = false,\n  ...props\n}: React.ComponentProps<\"div\"> & {\n  showIcon?: boolean\n}) {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      data-slot=\"sidebar-menu-skeleton\"\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[var(--skeleton-width)] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n}\n\nfunction SidebarMenuSub({ className, ...props }: React.ComponentProps<\"ul\">) {\n  return (\n    <ul\n      data-slot=\"sidebar-menu-sub\"\n      data-sidebar=\"menu-sub\"\n      className={cn(\n        \"border-sidebar-border mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l px-2.5 py-0.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenuSubItem({\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) {\n  return (\n    <li\n      data-slot=\"sidebar-menu-sub-item\"\n      data-sidebar=\"menu-sub-item\"\n      className={cn(\"group/menu-sub-item relative\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenuSubButton({\n  asChild = false,\n  size = \"md\",\n  isActive = false,\n  className,\n  ...props\n}: React.ComponentProps<\"a\"> & {\n  asChild?: boolean\n  size?: \"sm\" | \"md\"\n  isActive?: boolean\n}) {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      data-slot=\"sidebar-menu-sub-button\"\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"text-sidebar-foreground ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground active:bg-sidebar-accent active:text-sidebar-accent-foreground [&>svg]:text-sidebar-accent-foreground flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 outline outline-2 outline-transparent outline-offset-2 focus-visible:ring-2 disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":21846},"client/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"client/src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"client/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"client/src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"client/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"client/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":689},"client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"client/src/components/ui/toggle-group.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1753},"client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1527},"client/src/components/ui/tooltip.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1209},"client/src/components/PlannedProjects.tsx":{"content":"import { useEffect, useRef, useState } from 'react';\nimport { Card } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\n\nconst plannedProjects = [\n  {\n    id: 'puritypath',\n    title: 'PurityPath',\n    description: 'A health and wellness platform focusing on clean living and sustainable lifestyle choices.',\n    technologies: ['React.js', 'Node.js', 'MongoDB', 'Express.js'],\n    timeline: 'Q1 2025',\n    status: 'Planning',\n    image: 'https://images.unsplash.com/photo-1506905925346-21bda4d32df4?w=600&h=400&fit=crop'\n  },\n  {\n    id: 'jaffna-business-portfolio',\n    title: 'Jaffna Business Portfolio',\n    description: 'A comprehensive website portfolio showcasing businesses and services in Jaffna, promoting local commerce.',\n    technologies: ['Next.js', 'TypeScript', 'PostgreSQL', 'Tailwind CSS'],\n    timeline: 'Q2 2025',\n    status: 'Research',\n    image: 'https://images.unsplash.com/photo-1486406146926-c627a92ad1ab?w=600&h=400&fit=crop'\n  }\n];\n\nconst PlannedProjects = () => {\n  const [visibleCards, setVisibleCards] = useState<Set<number>>(new Set());\n  const cardRefs = useRef<(HTMLDivElement | null)[]>([]);\n\n  useEffect(() => {\n    const prefersReducedMotion = window.matchMedia('(prefers-reduced-motion: reduce)').matches;\n    if (prefersReducedMotion) {\n      setVisibleCards(new Set(plannedProjects.map((_, index) => index)));\n      return;\n    }\n\n    const observer = new IntersectionObserver(\n      (entries) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting) {\n            const cardIndex = cardRefs.current.indexOf(entry.target as HTMLDivElement);\n            if (cardIndex !== -1) {\n              setTimeout(() => {\n                setVisibleCards(prev => new Set(prev).add(cardIndex));\n              }, cardIndex * 200);\n            }\n          }\n        });\n      },\n      {\n        threshold: 0.2,\n        rootMargin: '0px 0px -50px 0px'\n      }\n    );\n\n    cardRefs.current.forEach(ref => {\n      if (ref) observer.observe(ref);\n    });\n\n    return () => {\n      cardRefs.current.forEach(ref => {\n        if (ref) observer.unobserve(ref);\n      });\n    };\n  }, []);\n\n  return (\n    <section id=\"planned-projects\" className=\"py-24 bg-card/20\">\n      <div className=\"max-w-6xl mx-auto px-8\">\n        <div className=\"text-center mb-16\">\n          <h2 \n            className=\"text-4xl md:text-5xl font-bold text-foreground mb-6\"\n            style={{ fontFamily: 'Poppins, sans-serif' }}\n            data-testid=\"planned-projects-title\"\n          >\n            Upcoming Projects\n          </h2>\n          <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto leading-relaxed\">\n            Exciting new ventures currently in planning and research phases, \n            each designed to address unique challenges and opportunities.\n          </p>\n        </div>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n          {plannedProjects.map((project, index) => (\n            <div\n              key={project.id}\n              ref={el => cardRefs.current[index] = el}\n              className={`transition-all duration-700 hover-elevate ${\n                visibleCards.has(index) \n                  ? 'opacity-100 translate-y-0' \n                  : 'opacity-0 translate-y-8'\n              }`}\n              style={{\n                transitionDelay: `${index * 100}ms`\n              }}\n              data-testid={`planned-project-${project.id}`}\n            >\n              <Card className=\"bg-card/40 backdrop-blur-sm border overflow-hidden h-full\">\n                <div className=\"relative h-48 overflow-hidden\">\n                  <img \n                    src={project.image} \n                    alt={project.title}\n                    className=\"w-full h-full object-cover transition-transform duration-500 hover:scale-105\"\n                  />\n                  <div className=\"absolute top-4 right-4\">\n                    <Badge \n                      variant=\"secondary\"\n                      className={`${\n                        project.status === 'Planning' ? 'bg-blue-500/20 text-blue-400 border border-blue-500/30' :\n                        project.status === 'Research' ? 'bg-purple-500/20 text-purple-400 border border-purple-500/30' :\n                        'bg-yellow-500/20 text-yellow-400 border border-yellow-500/30'\n                      }`}\n                      data-testid={`status-${project.id}`}\n                    >\n                      {project.status}\n                    </Badge>\n                  </div>\n                </div>\n\n                <div className=\"p-6\">\n                  <div className=\"flex items-center justify-between mb-3\">\n                    <h3 className=\"text-xl font-bold text-foreground\">\n                      {project.title}\n                    </h3>\n                    <span \n                      className=\"text-sm text-portfolio-cyan font-medium\"\n                      data-testid={`timeline-${project.id}`}\n                    >\n                      {project.timeline}\n                    </span>\n                  </div>\n\n                  <p className=\"text-muted-foreground mb-4 leading-relaxed\">\n                    {project.description}\n                  </p>\n\n                  <div className=\"flex flex-wrap gap-2 mb-4\">\n                    {project.technologies.map((tech, techIndex) => (\n                      <Badge\n                        key={techIndex}\n                        variant=\"outline\"\n                        className=\"bg-portfolio-cyan/10 text-portfolio-cyan border-portfolio-cyan/20\"\n                        data-testid={`tech-${project.id}-${tech.toLowerCase().replace(/[^a-z0-9]/g, '')}`}\n                      >\n                        {tech}\n                      </Badge>\n                    ))}\n                  </div>\n\n                  <div className=\"text-sm text-muted-foreground/80\">\n                    <span className=\"inline-flex items-center\">\n                      <span className=\"w-2 h-2 bg-portfolio-cyan rounded-full mr-2\"></span>\n                      Coming Soon\n                    </span>\n                  </div>\n                </div>\n              </Card>\n            </div>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default PlannedProjects;","size_bytes":6290},"client/src/components/CaseStudyNavigation.tsx":{"content":"import { useState, useEffect } from 'react';\nimport { useLocation } from 'wouter';\n\nconst CaseStudyNavigation = () => {\n  const [isScrolled, setIsScrolled] = useState(false);\n  const [, setLocation] = useLocation();\n\n  useEffect(() => {\n    const handleScroll = () => {\n      setIsScrolled(window.scrollY > 50);\n    };\n\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n\n  const navigateToHome = () => {\n    setLocation('/');\n  };\n\n  return (\n    <nav \n      className={`fixed top-0 left-0 right-0 z-40 transition-all duration-300 ${\n        isScrolled ? 'bg-portfolio-navy bg-opacity-95 backdrop-blur-sm border-b border-portfolio-slate border-opacity-20' : 'bg-transparent'\n      }`}\n      data-testid=\"case-study-navigation\"\n    >\n      <div className=\"max-w-6xl mx-auto px-8 py-4\">\n        <div className=\"flex items-center justify-between\">\n          {/* Logo */}\n          <button\n            onClick={navigateToHome}\n            className=\"text-2xl font-bold text-portfolio-cyan hover:text-portfolio-lightSlate transition-colors\"\n            style={{ fontFamily: 'Poppins, sans-serif' }}\n            data-testid=\"logo-home\"\n          >\n            SJ\n          </button>\n\n          {/* Back to Portfolio Link */}\n          <button\n            onClick={navigateToHome}\n            className=\"text-portfolio-lightSlate hover:text-portfolio-cyan transition-colors text-sm\"\n            data-testid=\"back-to-portfolio\"\n          >\n            ← Back to Portfolio\n          </button>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default CaseStudyNavigation;","size_bytes":1651},"client/src/components/ProfessionalExperience.tsx":{"content":"import { Card } from '@/components/ui/card';\nimport { useEffect, useRef, useState } from 'react';\n\nconst professionalExperiences = [\n  {\n    title: 'Manager',\n    organization: 'Thurka Metal Crushers',\n    period: 'May 2022 - Mar 2023',\n    current: false,\n    description: 'Managed operations and coordinated business activities, gaining valuable experience in business management and operational efficiency.'\n  }\n];\n\nconst ProfessionalExperience = () => {\n  const [visibleItems, setVisibleItems] = useState<Set<number>>(new Set());\n  const itemRefs = useRef<(HTMLDivElement | null)[]>([]);\n\n  useEffect(() => {\n    const prefersReducedMotion = window.matchMedia('(prefers-reduced-motion: reduce)').matches;\n    if (prefersReducedMotion) {\n      setVisibleItems(new Set(professionalExperiences.map((_, index) => index)));\n      return;\n    }\n\n    const observer = new IntersectionObserver(\n      (entries) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting) {\n            const itemIndex = itemRefs.current.indexOf(entry.target as HTMLDivElement);\n            if (itemIndex !== -1) {\n              setTimeout(() => {\n                setVisibleItems(prev => new Set(prev).add(itemIndex));\n              }, itemIndex * 200);\n            }\n          }\n        });\n      },\n      {\n        threshold: 0.3,\n        rootMargin: '0px 0px -50px 0px'\n      }\n    );\n\n    itemRefs.current.forEach(ref => {\n      if (ref) observer.observe(ref);\n    });\n\n    return () => {\n      itemRefs.current.forEach(ref => {\n        if (ref) observer.unobserve(ref);\n      });\n    };\n  }, []);\n\n  return (\n    <section id=\"professional-experience\" className=\"py-24 bg-card\">\n      <div className=\"max-w-4xl mx-auto px-8\">\n        <div className=\"text-center mb-16\">\n          <h2 \n            className=\"text-4xl md:text-5xl font-bold text-card-foreground mb-6\"\n            style={{ fontFamily: 'Poppins, sans-serif' }}\n            data-testid=\"professional-experience-title\"\n          >\n            Professional Experience\n          </h2>\n          <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto leading-relaxed\">\n            Professional roles that have contributed to my business acumen and management skills.\n          </p>\n        </div>\n\n        <div className=\"relative\">\n          {/* Timeline line */}\n          <div className=\"absolute left-4 md:left-1/2 md:-translate-x-px top-0 bottom-0 w-0.5 bg-border\"></div>\n\n          <div className=\"space-y-12\">\n            {professionalExperiences.map((experience, index) => (\n              <div\n                key={index}\n                ref={el => itemRefs.current[index] = el}\n                className={`relative flex items-center transition-all duration-700 ${\n                  visibleItems.has(index)\n                    ? 'opacity-100 translate-x-0'\n                    : 'opacity-0 translate-x-8'\n                }`}\n                style={{ transitionDelay: `${index * 150}ms` }}\n              >\n                {/* Timeline dot */}\n                <div className={`absolute left-4 md:left-1/2 md:-translate-x-1/2 w-4 h-4 rounded-full border-2 ${\n                  experience.current \n                    ? 'bg-portfolio-cyan border-portfolio-cyan' \n                    : 'bg-background border-border'\n                } z-10`}></div>\n\n                {/* Content card */}\n                <div className={`ml-12 md:ml-0 w-full ${index % 2 === 0 ? 'md:pr-8 md:mr-8' : 'md:pl-8 md:ml-8'}`}>\n                  <Card \n                    className={`p-6 bg-background border-border hover-elevate transition-all duration-300 ${\n                      index % 2 === 1 ? 'md:text-right' : ''\n                    }`}\n                    data-testid={`professional-experience-${index}`}\n                  >\n                    <div className=\"flex items-start justify-between mb-2\">\n                      <div className={index % 2 === 1 ? 'md:order-2' : ''}>\n                        <h3 \n                          className=\"text-xl font-bold text-foreground mb-1\"\n                          data-testid={`professional-experience-title-${index}`}\n                        >\n                          {experience.title}\n                        </h3>\n                        <h4 \n                          className=\"text-lg text-portfolio-cyan font-medium mb-2\"\n                          data-testid={`professional-experience-org-${index}`}\n                        >\n                          {experience.organization}\n                        </h4>\n                      </div>\n                      {experience.current && (\n                        <span className=\"px-2 py-1 text-xs bg-portfolio-cyan text-portfolio-navy rounded-full font-medium\">\n                          Current\n                        </span>\n                      )}\n                    </div>\n                    <p \n                      className=\"text-muted-foreground text-sm mb-3\"\n                      data-testid={`professional-experience-period-${index}`}\n                    >\n                      {experience.period}\n                    </p>\n                    {experience.description && (\n                      <p \n                        className=\"text-muted-foreground text-sm leading-relaxed\"\n                        data-testid={`professional-experience-description-${index}`}\n                      >\n                        {experience.description}\n                      </p>\n                    )}\n                  </Card>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default ProfessionalExperience;","size_bytes":5653},"client/src/components/Skills.tsx":{"content":"import { useEffect, useRef, useState } from 'react';\nimport { Card } from '@/components/ui/card';\n\nconst skillCategories = [\n  {\n    title: 'Programming Languages',\n    skills: ['Java', 'Python', 'C++', 'C', 'JavaScript', 'TypeScript', 'SQL', 'PHP']\n  },\n  {\n    title: 'Frameworks & Libraries',\n    skills: ['React', 'Node.js', 'Express.js', 'Spring Boot', 'FastAPI']\n  },\n  {\n    title: 'Database Systems',\n    skills: ['PostgreSQL', 'MySQL', 'MongoDB']\n  },\n  {\n    title: 'Developer Tools',\n    skills: ['Docker', 'Git', 'GitHub', 'VS Code', 'Postman', 'Figma']\n  },\n  {\n    title: 'Interpersonal Skills',\n    skills: ['Team Collaboration', 'Leadership', 'Communication', 'Problem-Solving', 'Quick Learning', 'Intellectual Curiosity', 'Agile Development']\n  }\n];\n\nconst Skills = () => {\n  const [visibleCategories, setVisibleCategories] = useState<Set<number>>(new Set());\n  const categoryRefs = useRef<(HTMLDivElement | null)[]>([]);\n\n  useEffect(() => {\n    const prefersReducedMotion = window.matchMedia('(prefers-reduced-motion: reduce)').matches;\n    if (prefersReducedMotion) {\n      setVisibleCategories(new Set(skillCategories.map((_, index) => index)));\n      return;\n    }\n\n    const observer = new IntersectionObserver(\n      (entries) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting) {\n            const categoryIndex = categoryRefs.current.indexOf(entry.target as HTMLDivElement);\n            if (categoryIndex !== -1) {\n              setTimeout(() => {\n                setVisibleCategories(prev => new Set(prev).add(categoryIndex));\n              }, categoryIndex * 150);\n            }\n          }\n        });\n      },\n      {\n        threshold: 0.3,\n        rootMargin: '0px 0px -50px 0px'\n      }\n    );\n\n    categoryRefs.current.forEach(ref => {\n      if (ref) observer.observe(ref);\n    });\n\n    return () => {\n      categoryRefs.current.forEach(ref => {\n        if (ref) observer.unobserve(ref);\n      });\n    };\n  }, []);\n\n  return (\n    <section id=\"skills\" className=\"py-24 bg-background\">\n      <div className=\"max-w-6xl mx-auto px-8\">\n        <div className=\"text-center mb-16\">\n          <h2 \n            className=\"text-4xl md:text-5xl font-bold text-foreground mb-6\"\n            style={{ fontFamily: 'Poppins, sans-serif' }}\n            data-testid=\"skills-title\"\n          >\n            Skills & Technologies\n          </h2>\n          <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto leading-relaxed\">\n            A comprehensive overview of my technical expertise and interpersonal capabilities.\n          </p>\n        </div>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n          {skillCategories.map((category, index) => (\n            <div\n              key={index}\n              ref={el => categoryRefs.current[index] = el}\n              className={`transition-all duration-700 ${\n                visibleCategories.has(index)\n                  ? 'opacity-100 translate-y-0'\n                  : 'opacity-0 translate-y-8'\n              }`}\n              style={{ transitionDelay: `${index * 100}ms` }}\n            >\n              <Card className=\"p-6 bg-card border-card-border hover-elevate transition-all duration-300 h-full\">\n                <h3 \n                  className=\"text-xl font-bold text-card-foreground mb-4\"\n                  data-testid={`skill-category-${index}`}\n                >\n                  {category.title}\n                </h3>\n                <ul className=\"space-y-2\">\n                  {category.skills.map((skill, skillIndex) => (\n                    <li \n                      key={skillIndex}\n                      className=\"text-muted-foreground flex items-center\"\n                      data-testid={`skill-${index}-${skillIndex}`}\n                    >\n                      <span className=\"w-2 h-2 bg-portfolio-cyan rounded-full mr-3 flex-shrink-0\"></span>\n                      {skill}\n                    </li>\n                  ))}\n                </ul>\n              </Card>\n            </div>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Skills;","size_bytes":4137}},"version":1}